{"version":3,"sources":["images/horizontal_main.png","components/SearchBar.js","my-knolist/Header.js","my-knolist/Sidebar.js","my-knolist/ProjectCard.js","my-knolist/Recent.js","my-knolist/All.js","components/AddButton.js","services/HttpRequest.js","components/NewProjectModal.js","my-knolist/Main.js","my-knolist/Page.js","my-knolist/Settings.js","app/AppHeader.js","components/ConfirmDeletionWindow.js","app/ProjectsList.js","services/StringHelpers.js","app/ProjectsSidebar.js","app/ItemView.js","components/NewItemForm.js","app/NewClusterForm.js","app/AppFooter.js","app/BibWindow.js","app/SharedProject.js","services/RandomGenerator.js","app/minigames/OddOnesOut.js","app/minigames/FindCommonality.js","app/minigames/MakePairs.js","app/MiniGameWindow.js","app/Minigames.js","components/RaiseLevelButton.js","services/isOverlap.js","app/MindMap.js","services/throttle.js","app/App.js","authentication/auth-provider.js","index.js"],"names":["module","exports","SearchBar","props","InputGroup","style","width","Input","placeholder","value","searchQuery","onInput","e","setSearchQuery","target","Button","Icon","icon","Header","logout","useAuth0","showSearch","Navbar","padding","borderBottom","FlexboxGrid","justify","align","to","className","src","horizontalLogo","alt","Item","colspan","Dropdown","title","sortCriterion","activeKey","eventKey","onSelect","setSortCriterion","noCaret","size","placement","componentClass","onClick","returnTo","window","location","origin","Sidebar","first","second","third","useLocation","Sidenav","height","fontFamily","paddingTop","paddingLeft","Body","Nav","active","ProjectCard","openProject","project","localStorage","setItem","JSON","stringify","description","data","shared_users","length","textDecoration","Panel","shaded","bordered","header","marginTop","id","float","Recent","show","projects","marginLeft","marginBottom","allProjects","sort","a","b","Date","parse","recent_access_date","recent","max","i","push","getFourRecent","map","index","Col","md","key","All","projectsToDisplay","sharedOnly","archivedOnly","filter","searchResults","toLowerCase","includes","creation_date","localeCompare","filterProjects","fontWeight","fontSize","AddButton","IconButton","appearance","circle","auth0","baseUrl","constructHttpQuery","endpoint","query","filters","finalEndpoint","forEach","entry","method","jsonBody","createAuth0Client","domain","client_id","audience","getTokenSilently","jwt","isChrome","chrome","webstore","runtime","isEdgeChromium","navigator","userAgent","indexOf","sendMessage","process","response","console","log","url","params","Object","keys","fetch","responseStatus","status","json","responseBody","body","makeHttpRequest","NewProjectModal","setShow","history","useHistory","Modal","overflow","onHide","Title","Form","fluid","FormGroup","controlId","ControlLabel","FormControl","name","HelpBlock","rows","Footer","projectTitle","document","getElementById","projectDesc","then","fromSidebar","go","Main","useState","setProjects","gotProjects","setGotProjects","useEffect","res","showRecent","position","right","bottom","Loader","center","Page","Settings","setActiveKey","Grid","Row","xs","Divider","Toggle","BibButton","Whisper","preventOverflow","trigger","speaker","Tooltip","setShowBib","React","Component","SearchAndFilter","handleCheckAll","checked","nextValue","state","filterCategories","setState","indeterminate","checkAll","sendFilters","handleChange","updateFilters","this","FilterDropdown","renderTitle","Checkbox","onChange","margin","CheckboxGroup","AppHeader","curProject","ConfirmDeletionWindow","backdrop","confirmDelete","resetDelete","color","delete","loading","Project","setLoading","val","setEditing","editing","cancelEditing","event","relatedTarget","updateProjectNameButtonId","setDeleteProject","stopPropagation","resetDeleteProject","deleteProject","callback","setCurProject","updateProjects","updateProjectName","updatedProjectName","s","l","r","substring","trimString","updatedProjectNameFormId","onSubmit","autoFocus","required","onBlur","defaultValue","ButtonToolbar","isShared","setShowSharedProject","EditProjectNameButton","buttonAction","SharedProjectButton","handleClick","ProjectsList","vertical","undefined","NewProjectButton","setShowNewProjectForm","ProjectsSidebar","showNewProjectForm","renderProjectsList","Placeholder","Paragraph","prevProps","prevState","snapshot","Drawer","close","ItemView","setConfirmDelete","setLoadingDelete","loadingDelete","deleteItem","selectedItem","renderNetwork","addNewNote","setAddItemMode","setSelectedItem","generateItemBody","item","typeOfNode","nodeTypes","modalHeaderAndBody","SOURCEANDNOTE","SourceAndNoteView","getSelectedItemDetails","SOURCEANDHIGHLIGHT","SourceAndHighlightView","PURENOTE","PureNoteView","PURESOURCE","PureSourceView","getNodeType","content","SourceTitle","updateTitle","newTitle","newSourceTitleInputId","setEditMode","editMode","marginRight","rel","href","display","EditSourceItemButton","hide","tooltipText","NoteContent","updateContent","newContent","noteContentId","renderContent","NewItemForm","switchShowNewItemForm","addNewItem","newItemUrlId","inputType","newItemNotesId","newItemData","x","y","parentCluster","Alert","info","success","showNewItemForm","type","NewClusterForm","switchShowNewClusterForm","addNewCluster","item1_id","newClusterIds","item1","item2_id","item2","newClusterNameId","stationaryClusterItemData","disableEditMode","error","showNewClusterForm","modalStyle","top","left","AppFooter","newItemButton","fit","warning","BibWindow","getBibSources","showBib","sources","copyBib","citationArray","getElementsByClassName","selectText","concat","innerHTML","listener","clipboardData","setData","preventDefault","addEventListener","execCommand","removeEventListener","showMissingIcon","source","author","published_date","site_name","access_date","citationFields","missing","changeInclusion","findIndex","is_included","renderAPADate","date","months","formattedDate","getFullYear","getMonth","getDate","renderChicagoDate","renderMLADate","renderAPACitation","publishDateJS","accessDateJS","isIncludedClassName","renderChicagoCitation","renderMLACitation","formattedPublishDate","formattedAccessDate","renderFormatType","citation","curFormat","formats","APA","CHI","MLA","included","setEditSource","editSource","changeFormatType","renderCitations","defaultChecked","_","FlexboxGridItem","renderBibBody","dropdownData","label","full","SelectPicker","cleanable","searchable","EditCitationButton","EditWindow","setFormValue","formValue","showField","field","isDatePicker","emptyResponse","saveInfo","publishDate","siteName","accessDate","layout","accepter","DatePicker","format","oneTap","Column","Table","HeaderCell","Cell","SharedProject","saveUser","email","userInputId","trim","showSharedProject","fixed","dataKey","randomPicker","array","n","j","Math","floor","random","slice","Line","Progress","OddOnesOut","getRandomItems","items","updateRandomItems","randomItems","chooseItem","numPlayed","selectedItems","generateDisplayValue","numRounds","percent","block","FindCommonality","submitCommon","textarea","commonId","commonality","common","MakePairs","createNodesAndEdges","nodes","edges","container","options","shape","physics","chosen","font","face","background","getComputedStyle","querySelector","widthConstraint","maximum","smooth","hoverWidth","interaction","selectConnectedEdges","hover","hoverConnectedEdges","manipulation","enabled","addEdge","addEdgeConnection","network","Network","on","nodeId","from_id","canvas","cursor","to_id","add","from","fromLabel","get","toLabel","connections","submitItems","visNodes","visEdges","selectedNode","DataSet","node","x_position","y_position","connection","GameWindow","showGame","setShowGame","selectedGame","MiniGames","randomizer","games","ceil","updateGames","validGames","clicked","zIndex","RaiseLevelButton","curClusterView","parent_cluster","setCurClusterView","cluster","borderStyle","borderWidth","borderColor","transform","textAlign","userSelect","isOverlap","rectA","rectB","MindMap","generateVisClusterId","generateClusterIdFromVisId","visClusterId","parseInt","generateVisInClusterId","secondPart","firstPart","generateClusterIdAndNodeIdFromVisInClusterId","visInClusterId","isItem","group","isCluster","isItemInCluster","setNonSelectedNodes","nonSelectedNodes","getIds","element","handleClickedNode","find","handleClickedCluster","clusters","handleDragStart","childNodesIds","child_items","clusterTitleId","nodesToMove","clusterCountId","selectNodes","getItems","getClusters","children","child_clusters","child","Promise","all","values","updateItemPosition","itemId","updateClusterPosition","clusterId","fitNetworkToScreen","setShowNewItemHelperMessage","setShowNewClusterHelperMessage","showNewItemHelperMessage","addItem","nodeData","showNewClusterHelperMessage","setShowAddToClusterHelperMessage","showAddToClusterHelperMessage","newItemFormType","addNodeMode","addItemToCluster","is_note","types","NULL","getNodeLabel","nodeType","nodeContent","getNodePosition","generateNodePositions","getColor","nodeColors","createNodes","createClusters","groups","selected","hovering","border","inCluster","addNode","func","ms","lastFunc","lastRan","context","args","arguments","clearTimeout","setTimeout","now","apply","throttle","getSelectedNodes","boundingBox","getBoundingBox","otherNodes","getPosition","existingClusterId","eventData","existingCluster","modes","URL","NOTES","NEITHER","showColor","getItem","project_id","some","clusterNodes","projectClusters","extraNodes","count","yOffset","Minigames","App","switchShowProjectsSidebar","showProjectsSidebar","projectId","projectsButton","withAuthenticationRequired","onRedirecting","KnolistAuthProvider","clientId","redirectUri","onRedirectCallback","appState","pathname","ReactDOM","render","exact","path"],"mappings":"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","file":"static/js/main.53eb4e6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/horizontal_main.7429f5ff.png\";","import React from 'react';\r\nimport {Icon, Input, InputGroup} from \"rsuite\";\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <InputGroup style={{width: props.width}}>\r\n            <Input placeholder=\"Search through your project\"\r\n            value={props.searchQuery}\r\n            onInput={e => props.setSearchQuery(e.target.value)}\r\n            />\r\n            <InputGroup.Button>\r\n                <Icon icon=\"search\"/>\r\n            </InputGroup.Button>\r\n        </InputGroup>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport horizontalLogo from \"../images/horizontal_main.png\";\r\nimport SearchBar from \"../components/SearchBar.js\";\r\nimport { Navbar, FlexboxGrid, Dropdown, Icon } from \"rsuite\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/*\r\n  Renders header logo, search bar, settings/logout\r\n\r\n  Changes in sorting/search bar changes state in parent component (Page)\r\n*/\r\nfunction Header(props) {\r\n  const { logout } = useAuth0();\r\n\r\n  if (props.showSearch) {\r\n    return (\r\n      <Navbar style={{ padding: \"0 10px\", borderBottom: \".1px solid #ededf0\" }}>\r\n        <FlexboxGrid justify=\"space-between\" align=\"middle\">\r\n          <Link to=\"/my-projects\">\r\n            <Navbar.Header>\r\n              <img className=\"limit-height\" src={horizontalLogo} alt=\"Knolist\" />\r\n            </Navbar.Header>\r\n          </Link>\r\n          <FlexboxGrid.Item colspan={13}>\r\n            <FlexboxGrid>\r\n              <FlexboxGrid.Item><SearchBar width={\"40vw\"} setSearchQuery={props.setSearchQuery} /></FlexboxGrid.Item>\r\n              <FlexboxGrid.Item>\r\n                <Dropdown title={\"Sort by: \" + props.sortCriterion} activeKey={props.sortCriterion}>\r\n                  <Dropdown.Item\r\n                    eventKey=\"Newest\"\r\n                    onSelect={() => props.setSortCriterion(\"Newest\")}>\r\n                    Newest\r\n                </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    eventKey=\"Oldest\"\r\n                    onSelect={() => props.setSortCriterion(\"Oldest\")}>\r\n                    Oldest\r\n                </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    eventKey=\"A-Z\"\r\n                    onSelect={() => props.setSortCriterion(\"A-Z\")}>\r\n                    A-Z\r\n                </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    eventKey=\"Z-A\"\r\n                    onSelect={() => props.setSortCriterion(\"Z-A\")}>\r\n                    Z-A\r\n                </Dropdown.Item>\r\n                </Dropdown>\r\n              </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item>\r\n            <Dropdown noCaret icon={<Icon icon=\"user\" size={\"lg\"} />} placement=\"bottomEnd\">\r\n              <Link to=\"/settings\"><Dropdown.Item componentClass=\"span\" className=\"react-router-styling\">Settings</Dropdown.Item></Link>\r\n              <Dropdown.Item onClick={() => {\r\n                logout({\r\n                  returnTo: window.location.origin,\r\n                });\r\n              }}>Log out</Dropdown.Item>\r\n            </Dropdown>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Navbar>\r\n    );\r\n  } else {\r\n    return (\r\n      <Navbar style={{ padding: \"0 10px\", borderBottom: \".1px solid #ededf0\" }}>\r\n        <FlexboxGrid justify=\"space-between\" align=\"middle\">\r\n          <Link to=\"/my-projects\">\r\n            <Navbar.Header>\r\n              <img className=\"limit-height\" src={horizontalLogo} alt=\"Knolist\" />\r\n            </Navbar.Header>\r\n          </Link>\r\n          <FlexboxGrid.Item>\r\n            <Dropdown noCaret icon={<Icon icon=\"user\" size={\"lg\"} />} placement=\"bottomEnd\">\r\n              <Link to=\"/settings\"><Dropdown.Item componentClass=\"span\">Settings</Dropdown.Item></Link>\r\n              <Dropdown.Item onClick={() => {\r\n                logout({\r\n                  returnTo: window.location.origin,\r\n                });\r\n              }}>Log out</Dropdown.Item>\r\n            </Dropdown>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Sidenav, Icon, Nav } from \"rsuite\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\n/*\r\n    Nav.Item has a componentClass property set to span because\r\n    of a warning generated by wrapping <a> within <a>,\r\n    since Link and Nav.Item are transpiled to <a>\r\n*/\r\nfunction Sidebar() {\r\n    let first = false;\r\n    let second = false;\r\n    let third = false;\r\n    const location = useLocation()[\"pathname\"];\r\n\r\n    if (location === \"/my-projects\") first = true;\r\n    else if (location === \"/shared\") second = true;\r\n    else if (location === \"/archived\") third = true;\r\n\r\n    return (\r\n        <div style={{ width: \"17vw\" }}>\r\n            <Sidenav\r\n                style={{ height: \"100vh\", fontFamily: \"Poppins\", paddingTop: \"3vh\", paddingLeft: \"1vh\" }}>\r\n                <Sidenav.Body>\r\n                    <Nav>\r\n                        <Link to=\"/my-projects\" className=\"react-router-styling\">\r\n                            <Nav.Item active={first} icon={<Icon icon=\"project\" />} componentClass=\"span\">\r\n                                My Projects\r\n                            </Nav.Item>\r\n                        </Link>\r\n                        <Link to=\"/shared\" className=\"react-router-styling\">\r\n                            <Nav.Item active={second} icon={<Icon icon=\"people-group\" />} componentClass=\"span\">\r\n                                Shared with me\r\n                            </Nav.Item>\r\n                        </Link>\r\n                        <Link to=\"/archived\" className=\"react-router-styling\">\r\n                            <Nav.Item active={third} icon={<Icon icon=\"archive\" />} componentClass=\"span\">\r\n                                Archived\r\n                            </Nav.Item>\r\n                        </Link>\r\n                    </Nav>\r\n                </Sidenav.Body>\r\n            </Sidenav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport { Panel, Icon } from \"rsuite\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ProjectCard(props) {\r\n  const openProject = (project) => {\r\n    localStorage.setItem(\"curProject\", JSON.stringify(project));\r\n    //set current project to selected project\r\n  }\r\n\r\n  let description = \"\";\r\n  if (props.data.description != null) description = props.data.description;\r\n\r\n  if (props.data.shared_users.length > 0) {\r\n    return (\r\n      <Link to=\"/\" style={{ textDecoration: \"none\" }} className=\"react-router-styling\">\r\n        <Panel\r\n          shaded bordered\r\n          header={props.data.title}\r\n          style={{ width: \"17vw\", marginTop: \"2vh\" }}\r\n          onClick={() => openProject(props.data)}>\r\n          {props.data.id}\r\n          <Icon icon=\"people-group\" style={{ float: \"right\", marginTop: \"5px\" }}/>\r\n        </Panel>\r\n      </Link>\r\n    );\r\n  } else {\r\n    return (\r\n      <Link to=\"/\" style={{ textDecoration: \"none\" }} className=\"react-router-styling\">\r\n        <Panel\r\n          shaded bordered\r\n          header={props.data.title}\r\n          style={{ width: \"17vw\", marginTop: \"2vh\" }}\r\n          onClick={() => openProject(props.data)}>\r\n          {description}\r\n        </Panel>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectCard;","import React from \"react\";\r\nimport { FlexboxGrid, Col } from \"rsuite\"\r\nimport ProjectCard from \"./ProjectCard.js\";\r\n\r\nfunction Recent(props) {\r\n  const getFourRecent = (allProjects) => {\r\n    allProjects.sort((a, b) => {\r\n      return Date.parse(b.recent_access_date) - Date.parse(a.recent_access_date);\r\n    });\r\n    let recent = [];\r\n    const max = allProjects.length >= 4 ? 4 : allProjects.length;\r\n    for (let i = 0; i < max; i++) {\r\n      recent.push(allProjects[i]);\r\n    }\r\n    return recent;\r\n  };\r\n\r\n  if (props.show && props.projects.length > 0) {\r\n    return (\r\n      <div>\r\n        <div className=\"myknolist-title\">Recent</div>\r\n        <div className=\"myknolist-container\">\r\n          <FlexboxGrid style={{ marginLeft: \"-6px\", marginBottom: \"5vh\" }} justify=\"start\">\r\n            {getFourRecent(props.projects).map((project, index) => {\r\n              return (\r\n                <FlexboxGrid.Item componentClass={Col} md={6} key={index}>\r\n                  <ProjectCard data={project} />\r\n                </FlexboxGrid.Item>);\r\n            })}\r\n          </FlexboxGrid>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return null;\r\n}\r\n\r\nexport default Recent;","import React from \"react\";\r\nimport {FlexboxGrid, Col} from \"rsuite\"\r\nimport ProjectCard from \"./ProjectCard.js\";\r\n\r\n/*\r\n    Displays all projects relevant to current page,\r\n    search query, and sorting option\r\n*/\r\nfunction All(props) {\r\n    // filter out irrelevant projects\r\n    const filterProjects = (allProjects) => {\r\n        let projectsToDisplay = null;\r\n        // first check what page we're on to see what kinds of projects to display\r\n        if (!props.sharedOnly && !props.archivedOnly) {\r\n            projectsToDisplay = allProjects;\r\n        } else if (props.sharedOnly) {\r\n            projectsToDisplay = allProjects.filter(project => project.shared_users.length > 0);\r\n        } else if (props.archivedOnly) {\r\n            // archived projects not implemented yet, uncomment below when ready\r\n            // projectsToDisplay = allProjects.filter(project => project.archived === true);\r\n            return [];\r\n        }\r\n        // further filter based on search query, if any (currently only searching project title)\r\n        if (props.searchQuery !== \"\") {\r\n            let searchResults = [];\r\n            for (let i = 0; i < projectsToDisplay.length; i++) {\r\n                if (projectsToDisplay[i].title.toLowerCase().includes(props.searchQuery.toLowerCase())) {\r\n                    searchResults.push(projectsToDisplay[i]);\r\n                }\r\n            }\r\n            projectsToDisplay = searchResults;\r\n        }\r\n        // further filter based on selected sorting option\r\n        switch (props.sortCriterion) {\r\n            case \"Oldest\":\r\n                //sort by creation date (backwards)\r\n                projectsToDisplay.sort((a, b) => {\r\n                    return Date.parse(a.creation_date) - Date.parse(b.creation_date);\r\n                });\r\n                break;\r\n            case \"Newest\":\r\n                //sort by creation date\r\n                projectsToDisplay.sort((a, b) => {\r\n                    return Date.parse(b.creation_date) - Date.parse(a.creation_date);\r\n                });\r\n                break;\r\n            case \"A-Z\":\r\n                projectsToDisplay.sort((a, b) => {\r\n                    return a.title.localeCompare(b.title);\r\n                });\r\n                break;\r\n            case \"Z-A\":\r\n                projectsToDisplay.sort((a, b) => {\r\n                    return b.title.localeCompare(a.title);\r\n                });\r\n                break;\r\n            default:\r\n                break; //do nothing when sortCriterion is empty string\r\n        }\r\n        return projectsToDisplay;\r\n    }\r\n\r\n    const projects = filterProjects(props.projects);\r\n\r\n    if (projects.length > 0) {\r\n        return (\r\n            <div>\r\n                <div className=\"myknolist-title\">All</div>\r\n                <div className=\"myknolist-container\">\r\n                    <FlexboxGrid style={{marginLeft: \"-6px\", marginBottom: \"5vh\"}} justify=\"start\">\r\n                        {projects.map((project, index) => {\r\n                            return (\r\n                                <FlexboxGrid.Item componentClass={Col} md={6} key={index}>\r\n                                    <ProjectCard data={project}/>\r\n                                </FlexboxGrid.Item>);\r\n                        })}\r\n                    </FlexboxGrid>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (projects.length === 0 && props.searchQuery === \"\") {\r\n        return (\r\n            <div>\r\n                <div style={{fontWeight: \"bold\", fontSize: \"2em\", fontFamily: \"Poppins\"}}>No projects!</div>\r\n                <div style={{fontSize: \"1em\", fontFamily: \"Poppins\", marginTop: \"15px\"}}>\r\n                    Add a new project to get started.\r\n                </div>\r\n            </div>\r\n        );\r\n    } else return <div className=\"myknolist-title\">All</div>;\r\n}\r\n\r\nexport default All;","import React from \"react\";\r\nimport {Icon, IconButton} from \"rsuite\";\r\n\r\nfunction AddButton() {\r\n    return (\r\n        <IconButton className=\"footer-btn\" appearance=\"primary\" icon={<Icon icon=\"plus\"/>}\r\n                    circle size=\"lg\"/>\r\n    )\r\n}\r\n\r\nexport default AddButton;","// import {Alert} from 'rsuite';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\n// The Auth0 client for obtaining JWT's\r\nlet auth0 = null;\r\n/* global chrome */\r\n\r\nconst baseUrl = \"https://knolist.herokuapp.com\";\r\n// const baseUrl = \"http://localhost:5000\";\r\n\r\n/**\r\n * Used to construct the valid endpoint for general and filtered searches.\r\n * @param endpoint The request endpoint (including the first slash). E.g., \"/projects\"\r\n * @param query The query string\r\n * @param filters A list of filters indicating which categories to query through\r\n * @returns {String}\r\n */\r\nexport function constructHttpQuery(endpoint, query, filters) {\r\n    let finalEndpoint = endpoint + \"?query=\" + query;\r\n    if (filters.length !== 0) {\r\n        filters.forEach(function (entry) {\r\n            if (entry === \"Page Content\") {\r\n                entry = \"content\";\r\n            }\r\n            finalEndpoint = finalEndpoint + \"&filter=\" + entry.toLowerCase();\r\n        });\r\n    }\r\n    return finalEndpoint;\r\n}\r\n\r\n/**\r\n * Used to make standard requests to the Knolist API. Includes authorization.\r\n * @param endpoint The request endpoint (including the first slash). E.g., \"/projects\"\r\n * @param method The HTTP method, if none is provided we assume \"GET\". E.g., \"POST\"\r\n * @param jsonBody A JS object that will be the JSON body of the request. E.g, {title: \"New Project\"}\r\n * @returns {Promise<{body: any, status: number}>}\r\n */\r\nasync function makeHttpRequest(endpoint, method = \"GET\", jsonBody = {}) {\r\n\r\n    // Configure Auth0 Client\r\n    auth0 = await createAuth0Client({\r\n        domain: 'knolist.us.auth0.com',\r\n        client_id: 'pBu5uP4mKTQgBttTW13N0wCVgsx90KMi',\r\n        audience: 'knolist',\r\n    });\r\n\r\n\r\n    // Grab the access token from the authentication workflow\r\n    const jwt = await auth0.getTokenSilently();\r\n    // Check if it's Chrome browser, only send if so\r\n    // Based on https://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\r\n    const isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\r\n    const isEdgeChromium = isChrome && (navigator.userAgent.indexOf(\"Edg\") !== -1);\r\n    if (isChrome && !isEdgeChromium) {\r\n        if (process.env.REACT_APP_CHROME_EXTENSION_ID === undefined) {\r\n            console.log(\"Please include the Chrome extension ID in the /frontend/.env.development.local file\");\r\n        } else {\r\n            chrome.runtime.sendMessage(process.env.REACT_APP_CHROME_EXTENSION_ID, {jwt: jwt},\r\n                function (response) {\r\n                    console.log(\"got response \" + response);\r\n                }\r\n            );\r\n        }\r\n    } else console.log(\"Not Chrome\");\r\n\r\n    const url = baseUrl + endpoint;\r\n    // Build params object\r\n    let params = {}\r\n    // Add authorization\r\n    params[\"headers\"] = {\r\n        \"Authorization\": \"Bearer \" + jwt\r\n    }\r\n    // Add body and content-type if necessary\r\n    if (Object.keys(jsonBody).length > 0) {\r\n        params[\"headers\"][\"Content-Type\"] = \"application/json\";\r\n        params[\"body\"] = JSON.stringify(jsonBody);\r\n    }\r\n    // Add method if not \"GET\"\r\n    if (method !== \"GET\") {\r\n        params[\"method\"] = method;\r\n    }\r\n\r\n    // Make request\r\n    const response = await fetch(url, params);\r\n    const responseStatus = response.status;\r\n    const responseBody = await response.json();\r\n\r\n    return {\r\n        status: responseStatus,\r\n        body: responseBody\r\n    };\r\n}\r\n\r\nexport default makeHttpRequest;","import React from \"react\";\r\nimport { Modal, Button, Form, FormGroup, ControlLabel, HelpBlock, FormControl } from \"rsuite\";\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction NewProjectModal(props) {\r\n    const show = props.show;\r\n    const setShow = props.setShow;\r\n    const history = useHistory();\r\n\r\n    const openProject = () => {\r\n        const projectTitle = document.getElementById(\"titleInput\").value;\r\n        let projectDesc = document.getElementById(\"descriptionInput\").value;\r\n        let body = {};\r\n        if (projectDesc == null || projectDesc === \"\") {\r\n            body = {\r\n                \"title\": projectTitle\r\n            }\r\n        } else {\r\n            body = {\r\n                \"title\": projectTitle,\r\n                \"description\": projectDesc\r\n            }\r\n        }\r\n        makeHttpRequest(\"/projects\", \"POST\", body).then(response => {\r\n            localStorage.setItem(\"curProject\", JSON.stringify(response.body.project));\r\n            if (props.fromSidebar) history.go(0);\r\n            else history.push(\"/\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} style={{ overflow: \"hidden\" }} onHide={() => setShow(false)}>\r\n            <Modal.Header><Modal.Title>New Project</Modal.Title></Modal.Header>\r\n            <Modal.Body>\r\n                <Form fluid>\r\n                    <FormGroup controlId=\"titleInput\">\r\n                        <ControlLabel>Title</ControlLabel>\r\n                        <FormControl name=\"title\" />\r\n                        <HelpBlock>Required</HelpBlock>\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"descriptionInput\">\r\n                        <ControlLabel>Description</ControlLabel>\r\n                        <FormControl\r\n                            rows={5}\r\n                            name=\"description\"\r\n                            componentClass=\"textarea\" />\r\n                    </FormGroup>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setShow(false);\r\n                            openProject();\r\n                        }}\r\n                        appearance=\"primary\">\r\n                        Create\r\n                    </Button>\r\n                <Button onClick={() => setShow(false)} appearance=\"default\">\r\n                    Cancel\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default NewProjectModal;","import React, { useState, useEffect } from \"react\";\r\nimport Recent from \"./Recent.js\";\r\nimport All from \"./All.js\";\r\nimport AddButton from \"../components/AddButton.js\";\r\nimport makeHttpRequest from \"../services/HttpRequest.js\";\r\nimport NewProjectModal from \"../components/NewProjectModal.js\";\r\nimport { Loader } from \"rsuite\";\r\n\r\n/*\r\n  Renders the main display of projects + new project button\r\n\r\n  Fetches every project the user has, which is passed to\r\n  child components for filtering\r\n*/\r\nfunction Main(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [projects, setProjects] = useState(null);\r\n  //Stops making an API call on every render which makes my computer breathe heavy lol\r\n  const [gotProjects, setGotProjects] = useState(false);\r\n\r\n  const getProjects = () => {\r\n    if (!gotProjects) {\r\n      makeHttpRequest(\"/projects\")\r\n        .then(res => setProjects(res.body.projects));\r\n      setGotProjects(true);\r\n    }\r\n  }\r\n\r\n  //Async function above works only when used in combination with\r\n  //a lifecycle function (this is basically a componentDidMount)\r\n  useEffect(() => {\r\n    getProjects();\r\n  });\r\n\r\n  if (projects !== null) {\r\n    return (\r\n      <div id=\"myknolist-main-container\">\r\n        <Recent show={props.showRecent} projects={projects} />\r\n        <All\r\n          projects={projects}\r\n          sharedOnly={props.sharedOnly}\r\n          archivedOnly={props.archivedOnly}\r\n          sortCriterion={props.sortCriterion}\r\n          searchQuery={props.searchQuery} />\r\n        <div\r\n          style={{ position: \"fixed\", right: 0, bottom: 0 }}\r\n          onClick={() => setShow(true)}>\r\n          <AddButton />\r\n        </div>\r\n\r\n        <NewProjectModal show={show} setShow={setShow} fromSidebar={false} />\r\n      </div>\r\n    );\r\n  } else return <Loader size=\"lg\" center />;\r\n}\r\n\r\nexport default Main;","import React, { useState } from \"react\";\r\nimport Header from \"./Header.js\";\r\nimport Sidebar from \"./Sidebar.js\";\r\nimport Main from \"./Main.js\";\r\n\r\n/*\r\n    Renders the components that make up the entire page\r\n    (My Projects, Shared With Me, and Archived)\r\n\r\n    Contains states for sorting and searching. These states\r\n    are changed in child components, which triggers a rerender\r\n    of the page. Also controls the content the page shows:\r\n    shared projects, archived projects, etc.\r\n*/\r\nfunction Page(props) {\r\n    let showRecent = false; //only want to show the recent section for My Projects\r\n    let sharedOnly = false;\r\n    let archivedOnly = false;\r\n    if (props.url === \"/my-projects\") showRecent = true;\r\n    if (props.url === \"/shared\") sharedOnly = true;\r\n    if (props.url === \"/archived\") archivedOnly = true;\r\n\r\n    const [sortCriterion, setSortCriterion] = useState(\"\"); //current sort option\r\n    const [searchQuery, setSearchQuery] = useState(\"\"); //current search query\r\n\r\n    //reset showRecent to false if there's an active search query\r\n    //so just the search results are displayed on the page\r\n    if (searchQuery !== \"\") showRecent = false;\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                setSortCriterion={setSortCriterion}\r\n                sortCriterion={sortCriterion}\r\n                setSearchQuery={setSearchQuery}\r\n                showSearch={true}/>\r\n            <Sidebar />\r\n            <Main\r\n                showRecent={showRecent}\r\n                sharedOnly={sharedOnly}\r\n                archivedOnly={archivedOnly}\r\n                sortCriterion={sortCriterion}\r\n                searchQuery={searchQuery} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page;","import React, { useState } from \"react\";\r\nimport Header from \"./Header.js\"\r\nimport Sidebar from \"./Sidebar.js\";\r\nimport { Input, Toggle, Divider, Button, Grid, Row, Col, Dropdown } from \"rsuite\";\r\n\r\nfunction Settings() {\r\n  const [activeKey, setActiveKey] = useState(\"Medium\");\r\n\r\n  return (\r\n    <div>\r\n      <Header showSearch={false} />\r\n      <Sidebar />\r\n      <div id=\"myknolist-main-container\">\r\n        <div style={{ width: \"50%\" }}>\r\n          <Grid>\r\n            <Row>\r\n              <Col xs={2} style={{ paddingTop: \"1vh\", fontWeight: \"bold\" }}>Full Name</Col>\r\n              <Col xs={6}><Input placeholder=\"John Doe\" /></Col>\r\n            </Row>\r\n            <Row style={{ marginTop: \"2vh\" }}>\r\n              <Col xs={2} style={{ paddingTop: \"1vh\", fontWeight: \"bold\" }}>Email</Col>\r\n              <Col xs={6}><Input placeholder=\"johndoe@gmail.com\" /></Col>\r\n            </Row>\r\n            <Row style={{ marginTop: \"2vh\" }}>\r\n              <Col xs={2} style={{ paddingTop: \"1vh\", fontWeight: \"bold\" }}>Password</Col>\r\n              <Col xs={6}><Button appearance=\"default\" size=\"sm\">Change</Button></Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row style={{ marginTop: \"2vh\" }}>\r\n              <Col xs={2} style={{ paddingTop: \".5vh\", fontWeight: \"bold\" }}>Dark Mode</Col>\r\n              <Col xs={6}><Toggle /></Col>\r\n            </Row>\r\n            <Row style={{ marginTop: \"2vh\" }}>\r\n              <Col xs={2} style={{ paddingTop: \"1.1vh\", fontWeight: \"bold\" }}>Text Size</Col>\r\n              <Col xs={6}>\r\n                <Dropdown title={activeKey} appearance=\"default\">\r\n                  <Dropdown.Item onSelect={() => setActiveKey(\"Small\")}>Small</Dropdown.Item>\r\n                  <Dropdown.Item onSelect={() => setActiveKey(\"Medium\")}>Medium</Dropdown.Item>\r\n                  <Dropdown.Item onSelect={() => setActiveKey(\"Large\")}>Large</Dropdown.Item>\r\n                </Dropdown>\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n          <Button style={{marginTop:\"4vh\"}} appearance=\"primary\">Save</Button>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport {\r\n    Checkbox, CheckboxGroup, Divider, Dropdown, FlexboxGrid, Icon, IconButton, Navbar,\r\n    Tooltip, Whisper\r\n} from \"rsuite\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport horizontalLogo from \"../images/horizontal_main.png\";\r\nimport SearchBar from \"../components/SearchBar.js\";\r\n\r\nfunction AppHeader(props) {\r\n    return (\r\n        <Navbar style={{padding: \"0 10px\"}}>\r\n            <FlexboxGrid justify=\"space-between\" align=\"middle\">\r\n                <Link to=\"/my-projects\">\r\n                    <Navbar.Header>\r\n                        <img className=\"limit-height\" src={horizontalLogo} alt=\"Knolist\"/>\r\n                    </Navbar.Header>\r\n                </Link>\r\n                <FlexboxGrid.Item>\r\n                    {\r\n                        props.curProject === null ?\r\n                            null :\r\n                            <span style={{\r\n                                fontWeight: \"bold\",\r\n                                fontSize: \"2em\"\r\n                            }}>{props.curProject.title}</span>\r\n\r\n                    }\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item>\r\n                    <FlexboxGrid>\r\n                        <SearchAndFilter searchQuery={props.searchQuery} setSearchQuery={props.setSearchQuery}\r\n                                         updateFilters={props.updateFilters}/>\r\n                        <BibButton setShowBib={props.setShowBib}/>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nclass BibButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <FlexboxGrid.Item>\r\n                <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>Bibliography</Tooltip>}\r\n                         placement=\"bottomEnd\">\r\n                    <IconButton onClick={() => this.props.setShowBib(true)} icon={<Icon icon=\"book\"/>}/>\r\n                </Whisper>\r\n            </FlexboxGrid.Item>\r\n        );\r\n    }\r\n}\r\n\r\nclass SearchAndFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // TODO: make backend endpoint to return the filter categories\r\n        const filterCategories = [\r\n            \"Title\",\r\n            \"URL\",\r\n            \"Page Content\",\r\n            \"Highlights\",\r\n            \"Notes\"\r\n        ];\r\n        this.state = {\r\n            indeterminate: false,\r\n            checkAll: true,\r\n            value: filterCategories,\r\n            filterCategories: filterCategories\r\n        };\r\n    }\r\n\r\n    handleCheckAll = (value, checked) => {\r\n        const nextValue = checked ? this.state.filterCategories : [];\r\n        this.setState({\r\n            value: nextValue,\r\n            indeterminate: false,\r\n            checkAll: checked\r\n        });\r\n        this.sendFilters(nextValue);\r\n    }\r\n\r\n    handleChange = (value) => {\r\n        this.setState({\r\n            value: value,\r\n            indeterminate: value.length > 0 && value.length < this.state.filterCategories.length,\r\n            checkAll: value.length === this.state.filterCategories.length\r\n        });\r\n        this.sendFilters(value);\r\n    }\r\n\r\n    sendFilters = (value) => {\r\n        this.props.updateFilters(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FlexboxGrid>\r\n                <FlexboxGrid.Item>\r\n                    <SearchBar width={250} searchQuery={this.props.searchQuery}\r\n                               setSearchQuery={this.props.setSearchQuery} updateFilters={this.props.updateFilters}/>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item>\r\n                    <FilterDropdown indeterminate={this.state.indeterminate} checkAll={this.state.checkAll}\r\n                                    value={this.state.value} filterCategories={this.state.filterCategories}\r\n                                    handleCheckAll={this.handleCheckAll} handleChange={this.handleChange}/>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n        );\r\n    }\r\n}\r\n\r\nfunction FilterDropdown(props) {\r\n    return (\r\n        <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>Search Filters</Tooltip>}\r\n                 placement=\"bottomEnd\">\r\n            <Dropdown placement=\"bottomEnd\" renderTitle={() => <IconButton icon={<Icon icon=\"filter\"/>}/>}>\r\n                <div style={{width: 200}}>\r\n                    <Checkbox indeterminate={props.indeterminate} checked={props.checkAll}\r\n                              onChange={props.handleCheckAll}>\r\n                        Select all\r\n                    </Checkbox>\r\n                    <Divider style={{margin: \"5px 0\"}}/>\r\n                    <CheckboxGroup name=\"checkboxList\" value={props.value}\r\n                                   onChange={props.handleChange}>\r\n                        {props.filterCategories.map(filter => {\r\n                            return <Checkbox key={filter} value={filter}>{filter}</Checkbox>\r\n                        })}\r\n                    </CheckboxGroup>\r\n                </div>\r\n            </Dropdown>\r\n        </Whisper>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport {Button, Icon, Modal} from \"rsuite\";\r\n\r\nfunction ConfirmDeletionWindow(props) {\r\n    return (\r\n        <Modal backdrop=\"static\" show={props.confirmDelete} onHide={props.resetDelete} size=\"xs\">\r\n            <Modal.Body>\r\n                <Icon icon=\"remind\" style={{color: '#ffb300', fontSize: 24}}/>\r\n                {'  '}\r\n                Are you sure you want to delete \"{props.title}\"?\r\n                <br/>\r\n                <b>This action cannot be undone.</b>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.delete} appearance=\"primary\" loading={props.loading}>\r\n                    Delete\r\n                </Button>\r\n                <Button onClick={props.resetDelete} appearance=\"default\">\r\n                    Cancel\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ConfirmDeletionWindow;","import React from \"react\";\r\nimport {Button, ButtonToolbar, FlexboxGrid, Form, Icon, IconButton, Input, Nav} from \"rsuite\";\r\n\r\nimport ConfirmDeletionWindow from \"../components/ConfirmDeletionWindow\";\r\n\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\nimport {trimString} from \"../services/StringHelpers\";\r\n\r\nfunction ProjectsList(props) {\r\n    return (\r\n        <Nav vertical activeKey={props.curProject === null ? undefined : props.curProject.id}\r\n             onSelect={(eventKey) => props.setCurProject(eventKey)}>\r\n            {props.projects.map(project => <Project key={project.id} updateProjects={props.updateProjects}\r\n                                                    project={project}\r\n                                                    eventKey={project.id} setCurProject={props.setCurProject}\r\n                                                    setShowSharedProject={props.setShowSharedProject}/>)}\r\n        </Nav>\r\n    );\r\n}\r\n\r\nclass Project extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            confirmDelete: false,\r\n            loading: false,\r\n            editing: false,\r\n            updatedProjectNameFormId: \"updated-project-name\",\r\n            updateProjectNameButtonId: \"update-project-name-button\"\r\n        }\r\n    }\r\n\r\n    setLoading = (val) => {\r\n        this.setState({loading: val})\r\n    }\r\n\r\n    setEditing = (val) => {\r\n        this.setState({editing: val})\r\n    }\r\n\r\n    cancelEditing = (event) => {\r\n        if (event.relatedTarget === null || event.relatedTarget.id !== this.state.updateProjectNameButtonId) {\r\n            this.setEditing(false);\r\n        }\r\n    }\r\n\r\n    setDeleteProject = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({confirmDelete: true})\r\n    }\r\n\r\n    resetDeleteProject = () => {\r\n        this.setState({confirmDelete: false})\r\n    }\r\n\r\n    deleteProject = () => {\r\n        this.setLoading(true);\r\n        const endpoint = \"/projects/\" + this.props.project.id;\r\n        makeHttpRequest(endpoint, \"DELETE\").then(() => {\r\n            // Reset the current project if the deleted is active\r\n            let callback;\r\n            if (this.props.active) callback = () => this.props.setCurProject(null);\r\n            this.props.updateProjects(callback);\r\n        });\r\n    }\r\n\r\n    updateProjectName = () => {\r\n        this.setLoading(true);\r\n        const updatedProjectName = trimString(document.getElementById(this.state.updatedProjectNameFormId).value);\r\n        const endpoint = \"/projects/\" + this.props.project.id;\r\n        const body = {\r\n            \"title\": updatedProjectName\r\n        }\r\n\r\n        makeHttpRequest(endpoint, \"PATCH\", body).then(() => {\r\n            this.props.updateProjects(() => {\r\n                this.setEditing(false);\r\n                this.setLoading(false);\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props.project)\r\n        return (\r\n            <div>\r\n                <ConfirmDeletionWindow confirmDelete={this.state.confirmDelete} resetDelete={this.resetDeleteProject}\r\n                                       title={this.props.project.title} delete={this.deleteProject}\r\n                                       loading={this.state.loading}/>\r\n                <Nav.Item onSelect={this.props.onSelect} eventKey={this.props.eventKey} active={this.props.active}>\r\n                    <FlexboxGrid justify=\"space-between\">\r\n                        <FlexboxGrid.Item>\r\n                            {\r\n                                this.state.editing ?\r\n                                    <Form onSubmit={this.updateProjectName}>\r\n                                        <Input autoFocus required id={this.state.updatedProjectNameFormId}\r\n                                               onClick={(e) => e.stopPropagation()}\r\n                                               onBlur={(e) => this.cancelEditing(e)}\r\n                                               defaultValue={this.props.project.title}/>\r\n                                    </Form> :\r\n                                    this.props.project.title\r\n                            }\r\n                        </FlexboxGrid.Item>\r\n                        <FlexboxGrid.Item>\r\n                            <ButtonToolbar>\r\n                                <EditProjectNameButton loading={this.state.loading} editing={this.state.editing}\r\n                                                       updateProjectNameButtonId={this.state.updateProjectNameButtonId}\r\n                                                       setEditing={this.setEditing}\r\n                                                       updateProjectName={this.updateProjectName}/>\r\n                                <IconButton onClick={this.setDeleteProject} icon={<Icon icon=\"trash\"/>} size=\"sm\"/>\r\n                                <SharedProjectButton isShared={this.props.project.shared_users.length > 0}\r\n                                                     setShowSharedProject={this.props.setShowSharedProject}/>\r\n                            </ButtonToolbar>\r\n                        </FlexboxGrid.Item>\r\n                    </FlexboxGrid>\r\n                </Nav.Item>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditProjectNameButton extends React.Component {\r\n    buttonAction = (event, editing) => {\r\n        event.stopPropagation();\r\n        if (editing) this.props.setEditing(editing);\r\n        else this.props.updateProjectName();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.editing) {\r\n            return (\r\n                <Button id={this.props.updateProjectNameButtonId} loading={this.props.loading}\r\n                        onClick={(e) => this.buttonAction(e, false)}>Update</Button>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <IconButton onClick={(e) => this.buttonAction(e, true)} icon={<Icon icon=\"edit2\"/>} size=\"sm\"/>\r\n        );\r\n    }\r\n}\r\n\r\nclass SharedProjectButton extends React.Component {\r\n    handleClick = (event) => {\r\n        event.stopPropagation();\r\n        this.props.setShowSharedProject(true);\r\n    }\r\n\r\n    render() {\r\n        let icon;\r\n        if (this.props.isShared) {\r\n            icon = \"share-alt\"\r\n        } else {\r\n            icon = \"people-group\"\r\n        }\r\n        return (\r\n            // <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>Share Project</Tooltip>}\r\n            //                      placement=\"bottom\">\r\n            <IconButton onClick={this.handleClick} icon={<Icon icon={icon}/>} size=\"sm\"/>\r\n            // </Whisper>\r\n\r\n        )\r\n    };\r\n}\r\n\r\nexport default ProjectsList;","/**\r\n * Trims a function for leading or trailing whitespace.\r\n * Based on https://stackoverflow.com/questions/8517089/js-search-in-object-values\r\n * @param s\r\n * @returns {string}\r\n */\r\nexport const trimString = (s) => {\r\n    let l = 0, r = s.length - 1;\r\n    while (l < s.length && s[l] === ' ') l++;\r\n    while (r > l && s[r] === ' ') r -= 1;\r\n    return s.substring(l, r + 1);\r\n};","import React from \"react\";\r\nimport {Drawer, Icon, IconButton, Placeholder, Tooltip, Whisper} from \"rsuite\";\r\n\r\nimport ProjectsList from \"./ProjectsList\";\r\nimport NewProjectModal from \"../components/NewProjectModal\";\r\n\r\nclass ProjectsSidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showNewProjectForm: false,\r\n        }\r\n    }\r\n\r\n    setShowNewProjectForm = (val) => {\r\n        this.setState({showNewProjectForm: val})\r\n    }\r\n\r\n    renderProjectsList = () => {\r\n        if (this.props.projects === null) return <Placeholder.Paragraph rows={15} active/>;\r\n\r\n        return <ProjectsList projects={this.props.projects} curProject={this.props.curProject}\r\n                             updateProjects={this.props.updateProjects} setCurProject={this.props.setCurProject}\r\n                             setShowSharedProject={this.props.setShowSharedProject}/>\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.updateProjects();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.show !== this.props.show && !this.props.show) {\r\n            this.setShowNewProjectForm(false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    size=\"xs\"\r\n                    show={this.props.show}\r\n                    onHide={this.props.close}>\r\n                    <Drawer.Header>\r\n                        <Drawer.Title>Your Projects</Drawer.Title>\r\n                    </Drawer.Header>\r\n                    <Drawer.Body style={{marginBottom: 10}}>\r\n                        {this.renderProjectsList()}\r\n                    </Drawer.Body>\r\n                    <Drawer.Footer>\r\n                        <NewProjectButton setShowNewProjectForm={this.setShowNewProjectForm}\r\n                                          showNewProjectForm={this.state.showNewProjectForm}/>\r\n                    </Drawer.Footer>\r\n                </Drawer>\r\n                <NewProjectModal show={this.state.showNewProjectForm} setShow={this.setShowNewProjectForm}\r\n                                 fromSidebar={true}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /* ***OLD RENDER***\r\n    render() {\r\n        return (\r\n            <Drawer\r\n                size=\"xs\"\r\n                show={this.props.show}\r\n                onHide={this.props.close}>\r\n                <Drawer.Header>\r\n                    <Drawer.Title>Your Projects</Drawer.Title>\r\n                </Drawer.Header>\r\n                <Drawer.Body style={{marginBottom: 10}}>\r\n                    {this.renderProjectsList()}\r\n                    <NewProjectForm show={this.state.showNewProjectForm}\r\n                                    setShowNewProjectForm={this.setShowNewProjectForm}\r\n                                    setCurProject={this.props.setCurProject}\r\n                                    updateProjects={this.props.updateProjects}/>\r\n                </Drawer.Body>\r\n                <Drawer.Footer>\r\n                    <NewProjectButton setShowNewProjectForm={this.setShowNewProjectForm}\r\n                                      showNewProjectForm={this.state.showNewProjectForm}/>\r\n                </Drawer.Footer>\r\n            </Drawer>\r\n        )\r\n    }*/\r\n}\r\n\r\nfunction NewProjectButton(props) {\r\n    return (\r\n        <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>New Project</Tooltip>}\r\n                 placement=\"topEnd\">\r\n            <IconButton onClick={() => props.setShowNewProjectForm(true)} appearance=\"primary\"\r\n                        icon={<Icon icon=\"plus\"/>} circle size=\"lg\"/>\r\n        </Whisper>\r\n    );\r\n}\r\n\r\n/* ***OLD NEWPROJECTBUTTON***\r\nfunction NewProjectButton(props) {\r\n    if (props.showNewProjectForm) {\r\n        return (\r\n            <Button onClick={() => props.setShowNewProjectForm(false)}>Cancel</Button>\r\n        );\r\n    } else {\r\n        return (\r\n            <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>New Project</Tooltip>}\r\n                placement=\"topEnd\">\r\n                <IconButton onClick={() => props.setShowNewProjectForm(true)} appearance=\"primary\"\r\n                    icon={<Icon icon=\"plus\" />} circle size=\"lg\" />\r\n            </Whisper>\r\n        );\r\n    }\r\n}*/\r\n\r\n// class NewProjectForm extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             inputId: \"new-project-name\",\r\n//             loading: false\r\n//         }\r\n//     }\r\n//\r\n//     componentDidUpdate(prevProps, prevState, snapshot) {\r\n//         if (prevProps.show !== this.props.show && this.props.show) {\r\n//             document.getElementById(this.state.inputId).focus();\r\n//         }\r\n//     }\r\n//\r\n//     setLoading = (val) => {\r\n//         this.setState({ loading: val })\r\n//     }\r\n//\r\n//     submit = () => {\r\n//         this.setLoading(true);\r\n//         let projectName = document.getElementById(this.state.inputId).value;\r\n//         projectName = trimString(projectName);\r\n//         const endpoint = \"/projects\";\r\n//         const body = {\r\n//             \"title\": projectName\r\n//         }\r\n//\r\n//         makeHttpRequest(endpoint, \"POST\", body).then((response) => {\r\n//             // Update projects\r\n//             const callback = () => {\r\n//                 this.props.setShowNewProjectForm(false);\r\n//                 this.props.setCurProject(response.body.project.id);\r\n//                 this.setLoading(false);\r\n//             }\r\n//             this.props.updateProjects(callback);\r\n//         });\r\n//     }\r\n//\r\n//     render() {\r\n//         // if (!this.props.show) return null;\r\n//\r\n//         return (\r\n//             <Animation.Fade in={this.props.show}>\r\n//                 <Form id=\"new-project-form\" layout=\"inline\" onSubmit={this.submit}>\r\n//                     <Input autoFocus required id={this.state.inputId} placeholder=\"New Project Name\" />\r\n//                     <Button style={{ float: \"right\", margin: 0 }} appearance=\"primary\" loading={this.state.loading}\r\n//                         type=\"submit\">Create</Button>\r\n//                 </Form>\r\n//             </Animation.Fade>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default ProjectsSidebar;","import React from \"react\";\r\nimport {\r\n    Button, Icon, IconButton, Input, Modal, Tooltip, Whisper\r\n} from \"rsuite\";\r\n\r\nimport ConfirmDeletionWindow from \"../components/ConfirmDeletionWindow\";\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\n\r\nclass ItemView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            confirmDelete: false,\r\n            loadingDelete: false\r\n        }\r\n    }\r\n\r\n    setConfirmDelete = (val) => {\r\n        this.setState({confirmDelete: val}, () => this.setLoadingDelete(false));\r\n    }\r\n\r\n    setLoadingDelete = (val) => {\r\n        this.setState({loadingDelete: val});\r\n    }\r\n\r\n    deleteItem = () => {\r\n        this.setLoadingDelete(true);\r\n        const endpoint = \"/items/\" + this.props.selectedItem.id;\r\n        makeHttpRequest(endpoint, \"DELETE\").then(() => {\r\n            this.props.renderNetwork(() => {\r\n                this.setConfirmDelete(false);\r\n                this.close();\r\n            });\r\n        })\r\n    }\r\n\r\n    addNewNote = () => {\r\n        this.props.setAddItemMode(\"Note\", this.props.selectedItem.url);\r\n        this.close();\r\n    }\r\n\r\n    close = () => {\r\n        this.props.setSelectedItem(null);\r\n    }\r\n\r\n    generateItemBody = (item, typeOfNode, nodeTypes) => {\r\n        let modalHeaderAndBody = <div/>;\r\n        if (typeOfNode === nodeTypes.SOURCEANDNOTE) {\r\n            modalHeaderAndBody =\r\n                <SourceAndNoteView item={item} getSelectedItemDetails={this.props.getSelectedItemDetails}\r\n                                   renderNetwork={this.props.renderNetwork}/>\r\n        } else if (typeOfNode === nodeTypes.SOURCEANDHIGHLIGHT) {\r\n            modalHeaderAndBody =\r\n                <SourceAndHighlightView item={item} getSelectedItemDetails={this.props.getSelectedItemDetails}\r\n                                        renderNetwork={this.props.renderNetwork}/>\r\n        } else if (typeOfNode === nodeTypes.PURENOTE) {\r\n            modalHeaderAndBody =\r\n                <PureNoteView item={item} getSelectedItemDetails={this.props.getSelectedItemDetails}\r\n                              renderNetwork={this.props.renderNetwork}/>\r\n        } else if (typeOfNode === nodeTypes.PURESOURCE) {\r\n            modalHeaderAndBody =\r\n                <PureSourceView item={item} getSelectedItemDetails={this.props.getSelectedItemDetails}\r\n                                renderNetwork={this.props.renderNetwork}/>\r\n        }\r\n        return modalHeaderAndBody;\r\n    }\r\n\r\n    render() {\r\n        if (this.props.selectedItem === null) return null;\r\n\r\n        const item = this.props.selectedItem;\r\n        const typeOfNode = this.props.getNodeType(item);\r\n        const nodeTypes = this.props.nodeTypes;\r\n\r\n        return (\r\n            <div>\r\n                <ConfirmDeletionWindow confirmDelete={this.state.confirmDelete}\r\n                                       resetDelete={() => this.setConfirmDelete(false)}\r\n                                       title={item.title} delete={this.deleteItem}\r\n                                       loading={this.state.loadingDelete}/>\r\n                <Modal size=\"md\" show onHide={this.close}>\r\n                    {this.generateItemBody(item, typeOfNode, nodeTypes)}\r\n                    <Modal.Footer>\r\n                        <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>Delete Item</Tooltip>}\r\n                                 placement=\"bottom\">\r\n                            <IconButton onClick={() => this.setConfirmDelete(true)} icon={<Icon icon=\"trash\"/>}\r\n                                        size=\"lg\"/>\r\n                        </Whisper>\r\n                        <Button appearance=\"primary\" onClick={this.addNewNote}>\r\n                            Add New Note\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction PureNoteView(props) {\r\n    return (\r\n        <div>\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    {props.item.content.substring(0, 100)}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <NoteContent item={props.item} getSelectedItemDetails={props.getSelectedItemDetails}\r\n                             renderNetwork={props.renderNetwork}/>\r\n            </Modal.Body>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SourceAndHighlightView(props) {\r\n    return (\r\n        <div>\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    <SourceTitle item={props.item} getSelectedItemDetails={props.getSelectedItemDetails}\r\n                                 renderNetwork={props.renderNetwork}/>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {props.item.content}\r\n            </Modal.Body>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SourceAndNoteView(props) {\r\n    return (\r\n        <div>\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    <SourceTitle item={props.item} getSelectedItemDetails={props.getSelectedItemDetails}\r\n                                 renderNetwork={props.renderNetwork}/>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <NoteContent item={props.item} getSelectedItemDetails={props.getSelectedItemDetails}\r\n                             renderNetwork={props.renderNetwork}/>\r\n            </Modal.Body>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PureSourceView(props) {\r\n    return (\r\n        <div>\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    <SourceTitle item={props.item} getSelectedItemDetails={props.getSelectedItemDetails}\r\n                                 renderNetwork={props.renderNetwork}/>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            </Modal.Body>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass SourceTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n            loading: false,\r\n            newSourceTitleInputId: \"new-source-title-input\"\r\n        }\r\n    }\r\n\r\n    setLoading = (val) => {\r\n        this.setState({loading: val});\r\n    }\r\n\r\n    updateTitle = (callback) => {\r\n        const newTitle = document.getElementById(this.state.newSourceTitleInputId).value;\r\n        if (newTitle === this.props.item.title) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.setLoading(true);\r\n        const endpoint = \"/items/\" + this.props.item.id;\r\n        const body = {\r\n            \"title\": newTitle\r\n        }\r\n\r\n        makeHttpRequest(endpoint, \"PATCH\", body).then(() => {\r\n            this.props.renderNetwork(() => {\r\n                this.props.getSelectedItemDetails().then(() => {\r\n                    this.setLoading(false);\r\n                    callback();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    setEditMode = (val) => {\r\n        if (!val) {\r\n            this.updateTitle(() => this.setState({editMode: val}));\r\n        } else {\r\n            this.setState({editMode: val});\r\n        }\r\n    }\r\n\r\n    renderTitle = () => {\r\n        if (this.state.editMode) {\r\n            return <Input style={{width: 400, marginRight: 10}} defaultValue={this.props.item.title}\r\n                          id={this.state.newSourceTitleInputId} autoFocus required/>\r\n        } else {\r\n            return <a target=\"_blank\" rel=\"noopener noreferrer\" style={{marginRight: 10}}\r\n                      href={this.props.item.url}>{this.props.item.title}</a>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display: \"flex\"}}>\r\n                {this.renderTitle()}\r\n                <EditSourceItemButton hide={false} editMode={this.state.editMode} loading={this.state.loading}\r\n                                      setEditMode={this.setEditMode} tooltipText=\"Rename\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass NoteContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n            loading: false,\r\n            noteContentId: \"note-content-input\"\r\n        }\r\n    }\r\n\r\n    setLoading = (val) => {\r\n        this.setState({loading: val});\r\n    }\r\n\r\n    updateContent = (callback) => {\r\n        const newContent = document.getElementById(this.state.noteContentId).value;\r\n        if (newContent === this.props.item.content) {\r\n            callback();\r\n            return;\r\n        }\r\n        this.setLoading(true);\r\n        const endpoint = \"/items/\" + this.props.item.id;\r\n        const body = {\r\n            \"content\": newContent\r\n        }\r\n\r\n        makeHttpRequest(endpoint, \"PATCH\", body).then(() => {\r\n            this.props.renderNetwork(() => {\r\n                this.props.getSelectedItemDetails().then(() => {\r\n                    this.setLoading(false);\r\n                    callback();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    setEditMode = (val) => {\r\n        if (!val) {\r\n            this.updateContent(() => this.setState({editMode: val}));\r\n        } else {\r\n            this.setState({editMode: val});\r\n        }\r\n    }\r\n\r\n    renderContent = () => {\r\n        if (this.state.editMode) {\r\n            return <Input style={{width: \"100%\", marginRight: 10}} defaultValue={this.props.item.content}\r\n                          id={this.state.noteContentId} autoFocus required componentClass=\"textarea\" rows={30}/>\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {this.props.item.content}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display: \"flex\"}}>\r\n                {this.renderContent()}\r\n                <EditSourceItemButton hide={false} editMode={this.state.editMode} loading={this.state.loading}\r\n                                      setEditMode={this.setEditMode} tooltipText=\"Edit\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction EditSourceItemButton(props) {\r\n    if (props.hide) return null;\r\n\r\n    const buttonSize = \"xs\";\r\n    if (props.editMode) {\r\n        return <Button onClick={() => props.setEditMode(false)} loading={props.loading} size={buttonSize}>Done</Button>\r\n    } else {\r\n        return (\r\n            <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>{props.tooltipText}</Tooltip>} placement=\"top\">\r\n                <IconButton onClick={() => props.setEditMode(true)} icon={<Icon icon=\"edit2\"/>} size={buttonSize}/>\r\n            </Whisper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemView;","import React from \"react\";\r\nimport {Alert, Button, Form, Input, Modal} from \"rsuite\";\r\n\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\n\r\nclass NewItemForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newItemUrlId: \"new-item-url\",\r\n            newItemNotesId: \"new-item-notes\",\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    close = () => {\r\n        this.props.switchShowNewItemForm()\r\n    }\r\n\r\n    setLoading = (val) => {\r\n        this.setState({loading: val})\r\n    }\r\n\r\n    addNewItem = () => {\r\n        this.setLoading(true);\r\n        let url;\r\n        if (!this.props.item) {\r\n            url = document.getElementById(this.state.newItemUrlId).value;\r\n            if (url === \"\") {\r\n                url = null;\r\n            }\r\n        } else {\r\n            url = this.props.item;\r\n        }\r\n        let content;\r\n        if (this.props.inputType === \"Note\") {\r\n            content = document.getElementById(this.state.newItemNotesId).value;\r\n        } else {\r\n            content = null;\r\n        }\r\n        const {x, y} = this.props.newItemData;\r\n        const endpoint = \"/items\";\r\n        const body = {\r\n            \"url\": url,\r\n            \"content\": content,\r\n            \"x_position\": x,\r\n            \"y_position\": y,\r\n            \"is_note\": content !== null\r\n        }\r\n        if (this.props.parentCluster !== null) body[\"parent_cluster\"] = this.props.parentCluster.id;\r\n        else body[\"parent_project\"] = this.props.curProject.id;\r\n\r\n        makeHttpRequest(endpoint, \"POST\", body).then((response) => {\r\n            if (response.status === 200) {\r\n                // Alert that the item already exists in this project\r\n                Alert.info('This item already exists in this project.');\r\n                this.props.switchShowNewItemForm();\r\n            } else if (response.status === 201) {\r\n                // Update items\r\n                this.props.renderNetwork(() => {\r\n                    Alert.success('Item added successfully.');\r\n                    this.props.switchShowNewItemForm();\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.showNewItemForm !== this.props.showNewItemForm && this.props.showNewItemForm) {\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.showNewItemForm) return null;\r\n        let body;\r\n        if (this.props.inputType === \"URL\") {\r\n            // New URL\r\n            body =\r\n                <Input autoFocus required type=\"URL\" id={this.state.newItemUrlId} placeholder=\"Add URL\"/>;\r\n        } else if (this.props.inputType === \"Note\" && this.props.item) {\r\n            // New note created from a source node\r\n            body =\r\n                <Input autoFocus type={\"Note\"} required id={this.state.newItemNotesId}\r\n                       placeholder=\"Add Note\" componentClass=\"textarea\" rows={30}/>;\r\n        } else if (this.props.inputType === \"Note\" && !this.props.item) {\r\n            // New note without a source passed in\r\n            body =\r\n                <div>\r\n                    <Input autoFocus type=\"URL\" id={this.state.newItemUrlId} placeholder=\"Add optional URL\"/>\r\n                    <Input type={\"Note\"} required id={this.state.newItemNotesId}\r\n                           placeholder=\"Add Note\" componentClass=\"textarea\" rows={30}/>\r\n                </div>;\r\n        }\r\n\r\n        return (\r\n            <Modal show onHide={this.close}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Insert the {this.props.inputType} you'd like to add.\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Form onSubmit={this.addNewItem}>\r\n                    <Modal.Body>\r\n                        {body}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" loading={this.state.loading} appearance=\"primary\">\r\n                            Add Item\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewItemForm;","import React from \"react\";\r\nimport {Alert, Button, Form, Input, Modal} from \"rsuite\";\r\n\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\n\r\nclass NewClusterForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newClusterNameId: \"new-cluster-name\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.props.switchShowNewClusterForm()\r\n    }\r\n\r\n    setLoading = (val) => {\r\n        this.setState({loading: val})\r\n    }\r\n\r\n    addNewCluster = () => {\r\n        this.setLoading(true);\r\n        const item1_id = this.props.newClusterIds.item1;\r\n        const item2_id = this.props.newClusterIds.item2;\r\n        const name = document.getElementById(this.state.newClusterNameId).value;\r\n        const {x, y} = this.props.stationaryClusterItemData;\r\n\r\n        const body = {\r\n            \"item1_id\": item1_id,\r\n            \"item2_id\": item2_id,\r\n            \"x_position\": x,\r\n            \"y_position\": y,\r\n            \"name\": name\r\n        }\r\n        const endpoint = \"/clusters\";\r\n        makeHttpRequest(endpoint, \"POST\", body).then((response) => {\r\n            const callback = () => {\r\n                this.props.switchShowNewClusterForm();\r\n                this.props.disableEditMode();\r\n            }\r\n\r\n            if (response.status === 201) {\r\n                this.props.renderNetwork(() => {\r\n                    callback();\r\n                    Alert.success('Cluster created successfully');\r\n                });\r\n            } else {\r\n                callback();\r\n                Alert.error('Something went wrong');\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.showNewClusterForm !== this.props.showNewClusterForm && this.props.showNewClusterForm) {\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.showNewClusterForm) return null;\r\n\r\n        return (\r\n            <Modal show onHide={this.close} style={modalStyle}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Enter the name of the cluster you'd like to create\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Form onSubmit={this.addNewCluster}>\r\n                    <Modal.Body>\r\n                        <Input autoFocus type=\"text\" required id={this.state.newClusterNameId}\r\n                               placeholder=\"New Cluster Name\"/>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" loading={this.state.loading} appearance=\"primary\">\r\n                            Add Cluster\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst modalStyle = {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: '-96px',\r\n    marginLeft: '-300px'\r\n}\r\n\r\nexport default NewClusterForm;","import React from \"react\";\r\nimport {Alert, Dropdown, Icon, IconButton, Tooltip, Whisper} from \"rsuite\";\r\nimport AddButton from \"../components/AddButton.js\";\r\n\r\nclass AppFooter extends React.Component {\r\n    newItemButton = () => {\r\n        return (\r\n            <AddButton/>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"footer\">\r\n                <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>Fit To Screen</Tooltip>}\r\n                         placement=\"topStart\">\r\n                    <IconButton className=\"footer-btn\" appearance=\"primary\" icon={<Icon icon=\"arrows-alt\"/>} circle\r\n                                size=\"lg\" onClick={this.props.fit}/>\r\n                </Whisper>\r\n\r\n                <Dropdown style={{marginRight: 15}} trigger={[\"click\", \"hover\"]} placement=\"topEnd\"\r\n                          renderTitle={this.newItemButton}>\r\n                    <Dropdown.Item onClick={() => Alert.warning(\"Feature coming soon...\")}>\r\n                        <Icon icon=\"file-o\"/> Add File\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => this.props.setAddItemMode(\"URL\")}>\r\n                        <Icon icon=\"globe2\"/> Add Web Page\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => this.props.setAddItemMode(\"Note\")}>\r\n                        <Icon icon=\"edit\"/> Add Notes\r\n                    </Dropdown.Item>\r\n                </Dropdown>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppFooter;","import React from \"react\";\r\nimport {\r\n    Modal, SelectPicker, IconButton, Icon, Checkbox, Form, FormGroup, FormControl, ControlLabel,\r\n    CheckboxGroup, Tooltip, Whisper, Divider, Alert, Button, DatePicker, Placeholder, FlexboxGrid\r\n} from \"rsuite\";\r\n\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\nimport FlexboxGridItem from \"rsuite/es/FlexboxGrid/FlexboxGridItem\";\r\n\r\nclass BibWindow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const formats = {\r\n            APA: \"APA Reference List\",\r\n            MLA: \"MLA Works Cited\",\r\n            CHI: \"Chicago Bibliography Style\"\r\n        }\r\n        const months = ['January', 'February', 'March', 'April', 'May', 'June',\r\n            'July', 'August', 'September', 'October', 'November', 'December'];\r\n        this.state = {\r\n            sources: null,\r\n            curFormat: formats.APA,\r\n            formats: formats,\r\n            months: months,\r\n            editSource: null,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    setLoading = (val) => {\r\n        this.setState({loading: val})\r\n    }\r\n\r\n    // Make API call to get all sources\r\n    getBibSources = (callback) => {\r\n        if (this.props.curProject === null || !this.props.showBib) return null;\r\n        this.setLoading(true);\r\n        const endpoint = \"/projects/\" + this.props.curProject.id + \"/sources\";\r\n        makeHttpRequest(endpoint).then((response) => {\r\n            this.setState({sources: response.body.sources}, () => {\r\n                this.setLoading(false);\r\n                if (typeof callback === \"function\") callback();\r\n            })\r\n        });\r\n    }\r\n\r\n    // Copies citations in top section (those with is_included === true)\r\n    // onto clipboard with formatting\r\n    copyBib = () => {\r\n        const citationArray = document.getElementsByClassName('copyText');\r\n        let selectText = \"\";\r\n        for (let i = 0; i < citationArray.length; i++) {\r\n            selectText = selectText.concat(citationArray[i].innerHTML);\r\n            selectText = selectText.concat('<br><br>');\r\n        }\r\n\r\n        function listener(e) {\r\n            e.clipboardData.setData(\"text/html\", selectText);\r\n            e.clipboardData.setData(\"text/plain\", selectText);\r\n            e.preventDefault();\r\n        }\r\n\r\n        document.addEventListener(\"copy\", listener);\r\n        document.execCommand(\"copy\");\r\n        document.removeEventListener(\"copy\", listener);\r\n        Alert.info('Copied Citations to Clipboard');\r\n    };\r\n\r\n    // Check if citation has all source fields present\r\n    // Displays a Missing! icon if not\r\n    showMissingIcon = (source) => {\r\n\r\n        if (source.title && source.url && source.author\r\n            && source.published_date && source.site_name\r\n            && source.access_date) {\r\n            return null;\r\n        } else {\r\n            const citationFields = ['title, ', 'URL, ', 'author, ', 'publish date, ', 'site name, ', 'access date, ']\r\n            let missing = \"\"\r\n            if (!source.title) {\r\n                missing = missing.concat(citationFields[0])\r\n            }\r\n            if (!source.url) {\r\n                missing = missing.concat(citationFields[1])\r\n            }\r\n            if (!source.author) {\r\n                missing = missing.concat(citationFields[2])\r\n            }\r\n            if (!source.published_date) {\r\n                missing = missing.concat(citationFields[3])\r\n            }\r\n            if (!source.site_name) {\r\n                missing = missing.concat(citationFields[4])\r\n            }\r\n            if (!source.access_date) {\r\n                missing = missing.concat(citationFields[5])\r\n            }\r\n            // Remove last comma\r\n            missing = missing.substring(0, missing.length - 2)\r\n            return (\r\n                <Whisper placement=\"top\" trigger=\"hover\"\r\n                         speaker={<Tooltip>This citation is missing the <i>{missing} </i>field(s)</Tooltip>}>\r\n                    <Icon icon=\"exclamation-circle\" style={{color: '#f5a623'}}/>\r\n                </Whisper>\r\n            );\r\n        }\r\n    }\r\n\r\n    // Called when checkbox changed\r\n    // Changes citation is_included field to true or false\r\n    // depending on checked or not\r\n    changeInclusion = (event, checked, source) => {\r\n        event.stopPropagation();\r\n        const endpoint = \"/sources/\" + source.id;\r\n        const body = {\r\n            \"is_included\": checked\r\n        }\r\n        makeHttpRequest(endpoint, \"PATCH\", body);\r\n        let sources = this.state.sources;\r\n        const index = sources.findIndex(x => x.id === source.id);\r\n        sources[index].is_included = checked;\r\n        this.setState({sources: sources});\r\n    }\r\n\r\n    renderAPADate = (date) => {\r\n        const months = this.state.months;\r\n        let formattedDate = \"(\";\r\n        formattedDate = formattedDate + date.getFullYear() + \", \";\r\n        formattedDate = formattedDate + months[date.getMonth()] + \" \";\r\n        formattedDate = formattedDate + (date.getDate() + 1) + \"). \";\r\n        return formattedDate;\r\n    }\r\n\r\n    renderChicagoDate = (date) => {\r\n        const months = this.state.months;\r\n        let formattedDate = months[date.getMonth()] + \" \";\r\n        formattedDate = formattedDate + (date.getDate() + 1) + \", \";\r\n        formattedDate = formattedDate + date.getFullYear() + \".\";\r\n        return formattedDate;\r\n    }\r\n\r\n    renderMLADate = (date) => {\r\n        const months = this.state.months;\r\n        let formattedDate = (date.getDate() + 1) + \" \";\r\n        formattedDate = formattedDate + months[date.getMonth()] + \" \";\r\n        formattedDate = formattedDate + date.getFullYear() + \".\";\r\n        return formattedDate;\r\n    }\r\n\r\n    renderAPACitation = (source) => {\r\n        let formattedDate = \"\";\r\n        let title = \"\";\r\n        let author = \"\";\r\n        let publishDateJS = new Date(source.published_date);\r\n        let accessDateJS = new Date(source.access_date);\r\n        // if published_date is None, use access_date\r\n        if (source.published_date) {\r\n            formattedDate = this.renderAPADate(publishDateJS);\r\n        } else if (source.access_date) {\r\n            formattedDate = this.renderAPADate(accessDateJS);\r\n        }\r\n        if (source.title) {\r\n            title = title + source.title + \".\";\r\n        }\r\n        if (source.author) {\r\n            author = author + source.author + \".\";\r\n        }\r\n        return (\r\n            <p className={this.isIncludedClassName(source.is_included)}>{author} {formattedDate}\r\n                <i>{title}</i> {source.site_name}. <a href={source.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {source.url}.</a>\r\n            </p>\r\n        );\r\n    }\r\n\r\n    renderChicagoCitation = (source) => {\r\n        let formattedDate = \"\";\r\n        let title = \"\";\r\n        let author = \"\";\r\n        let publishDateJS = new Date(source.published_date);\r\n        let accessDateJS = new Date(source.access_date);\r\n        // if publishDate None, use accessDate\r\n        if (source.published_date) {\r\n            formattedDate = this.renderChicagoDate(publishDateJS);\r\n        } else if (source.access_date) {\r\n            formattedDate = this.renderChicagoDate(accessDateJS);\r\n        }\r\n        if (source.title) {\r\n            title = title + \"\\\"\" + source.title + \".\\\"\";\r\n        }\r\n        if (source.author) {\r\n            author = author + source.author + \".\";\r\n        }\r\n        return (\r\n            <p className={this.isIncludedClassName(source.is_included)}>{author} {title}\r\n                <i>{source.site_name}</i>, {formattedDate} <a href={source.url} target=\"_blank\"\r\n                                                              rel=\"noopener noreferrer\">\r\n                    {source.url}.</a>\r\n            </p>\r\n        );\r\n    }\r\n\r\n    renderMLACitation = (source) => {\r\n        let formattedPublishDate = \"\";\r\n        let formattedAccessDate = \"\";\r\n        let title = \"\";\r\n        let author = \"\";\r\n        let publishDateJS = new Date(source.published_date);\r\n        let accessDateJS = new Date(source.access_date);\r\n        if (source.published_date) {\r\n            formattedPublishDate = this.renderMLADate(publishDateJS);\r\n        }\r\n        if (source.access_date) {\r\n            formattedAccessDate = \"Accessed \" + this.renderMLADate(accessDateJS);\r\n        }\r\n        if (source.title) {\r\n            title = title + \"\\\"\" + source.title + \".\\\"\";\r\n        }\r\n        if (source.author) {\r\n            author = author + source.author + \".\";\r\n        }\r\n        return (\r\n            <p className={this.isIncludedClassName(source.is_included)}>{author} {title}\r\n                <i>{source.site_name}</i>, {formattedPublishDate} <a href={source.url} target=\"_blank\"\r\n                                                                     rel=\"noopener noreferrer\"> {source.url}.\r\n                </a> {formattedAccessDate}\r\n            </p>\r\n        );\r\n    }\r\n\r\n    // Renders citation in APA, MLA, or Chicago format\r\n    // source.access_date and source.published_date are in string form\r\n    // Use JSON Date() object to parse\r\n    renderFormatType = (source) => {\r\n        let citation = null;\r\n        if (this.state.curFormat === this.state.formats.APA) {\r\n            citation = this.renderAPACitation(source);\r\n        } else if (this.state.curFormat === this.state.formats.CHI) {\r\n            citation = this.renderChicagoCitation(source);\r\n        } else if (this.state.curFormat === this.state.formats.MLA) {\r\n            citation = this.renderMLACitation(source);\r\n        }\r\n\r\n        return citation;\r\n    }\r\n\r\n    // Sets className to copyText if citation is included to copy to clipboard\r\n    // Else sets className to undefined\r\n    isIncludedClassName = (included) => {\r\n        if (included) {\r\n            return 'copyText';\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    // Keeps track if Bibliography Generation Button clicked and Window should open\r\n    setEditSource = (source) => {\r\n        this.setState({\r\n            editSource: source\r\n        });\r\n    }\r\n\r\n    // Change the citation format when format selection is changed\r\n    changeFormatType = (value) => {\r\n        this.setState({\r\n            curFormat: value\r\n        });\r\n    }\r\n\r\n    renderCitations = (included) => {\r\n        return this.state.sources.map((source, index) => {\r\n            if (source.is_included === included) {\r\n                return (\r\n                    <Checkbox defaultChecked={included} style={included ? null : {color: \"#d3d3d3\"}}\r\n                              onChange={(_, checked, event) => this.changeInclusion(event, checked, source)}\r\n                              key={index}>\r\n                        <FlexboxGrid align=\"middle\" justify=\"space-between\">\r\n                            <FlexboxGridItem>\r\n                                {this.renderFormatType(source)}\r\n                            </FlexboxGridItem>\r\n                            <FlexboxGridItem>\r\n                                <EditCitationButton source={source} setEditSource={this.setEditSource}/>\r\n                                {this.showMissingIcon(source)}\r\n                            </FlexboxGridItem>\r\n                        </FlexboxGrid>\r\n                    </Checkbox>\r\n                );\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n\r\n    renderBibBody = () => {\r\n        if (this.state.loading) return <Placeholder.Paragraph rows={4} active/>\r\n\r\n        return (\r\n            <CheckboxGroup name=\"checkboxList\">\r\n                {this.renderCitations(true)}\r\n                <Divider/>\r\n                {this.renderCitations(false)}\r\n            </CheckboxGroup>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.showBib !== this.props.showBib && this.props.showBib) {\r\n            this.getBibSources();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBibSources();\r\n    }\r\n\r\n    render() {\r\n        const formats = this.state.formats;\r\n        const dropdownData = [{\r\n            value: formats.APA,\r\n            label: formats.APA\r\n        }, {\r\n            value: formats.MLA,\r\n            label: formats.MLA\r\n        }, {\r\n            value: formats.CHI,\r\n            label: formats.CHI\r\n        }]\r\n        if (this.state.sources === null && !this.state.loading) return null;\r\n\r\n        return (\r\n            <Modal full show={this.props.showBib} onHide={() => this.props.setShowBib(false)}>\r\n                <Modal.Header style={{marginRight: \"5%\"}}>\r\n                    <Modal.Title>\r\n                        <span style={{marginRight: 5}}>Bibliography</span>\r\n                        <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>Copy to Clipboard</Tooltip>}\r\n                                 placement=\"top\">\r\n                            <IconButton onClick={this.copyBib} icon={<Icon icon=\"copy\"/>} size=\"sm\"/>\r\n                        </Whisper>\r\n                        <SelectPicker defaultValue={this.state.curFormat ? this.state.curFormat : formats.APA}\r\n                                      data={dropdownData} onChange={this.changeFormatType}\r\n                                      style={{float: 'right'}} cleanable={false} searchable={false}/>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.renderBibBody()}\r\n                </Modal.Body>\r\n                <EditWindow close={() => this.setEditSource(null)} source={this.state.editSource}\r\n                            getBibSources={this.getBibSources}/>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditCitationButton extends React.Component {\r\n    render() {\r\n        const buttonSize = \"xs\";\r\n        return (\r\n            <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>Edit Citation Fields</Tooltip>} placement=\"top\">\r\n                <IconButton icon={<Icon icon=\"edit2\"/>} size={buttonSize}\r\n                            onClick={() => this.props.setEditSource(this.props.source)}/>\r\n            </Whisper>\r\n        );\r\n    }\r\n}\r\n\r\nclass EditWindow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            formValue: {\r\n                author: this.showField(props.source, \"author\"),\r\n                title: this.showField(props.source, \"title\"),\r\n                publishDate: this.showField(props.source, \"published_date\", true),\r\n                siteName: this.showField(props.source, \"site_name\"),\r\n                accessDate: this.showField(props.source, \"access_date\", true),\r\n                url: this.showField(props.source, \"url\")\r\n            }\r\n        }\r\n    }\r\n\r\n    setFormValue = (value) => {\r\n        this.setState({formValue: value});\r\n    }\r\n\r\n    // Show loading when saving citation info\r\n    setLoading = (value) => {\r\n        this.setState({loading: value});\r\n    }\r\n\r\n    showField = (source, field, isDatePicker = false) => {\r\n        const emptyResponse = isDatePicker ? null : \"\";\r\n        if (!source) return emptyResponse;\r\n        const val = source[field]\r\n        if (val) {\r\n            return isDatePicker ? new Date(val) : val;\r\n        } else {\r\n            return emptyResponse;\r\n        }\r\n    }\r\n\r\n    // Makes API call to update citation info\r\n    saveInfo = async () => {\r\n        this.setLoading(true);\r\n        const endpoint = \"/sources/\" + this.props.source.id;\r\n        const body = {\r\n            \"author\": this.state.formValue.author,\r\n            \"title\": this.state.formValue.title,\r\n            \"published_date\": this.state.formValue.publishDate,\r\n            \"site_name\": this.state.formValue.siteName,\r\n            \"access_date\": this.state.formValue.accessDate,\r\n            \"url\": this.state.formValue.url\r\n        }\r\n        await makeHttpRequest(endpoint, \"PATCH\", body);\r\n        this.props.getBibSources(() => {\r\n            this.props.close();\r\n            this.setLoading(false);\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setFormValue({\r\n                author: this.showField(this.props.source, \"author\"),\r\n                title: this.showField(this.props.source, \"title\"),\r\n                publishDate: this.showField(this.props.source, \"published_date\", true),\r\n                siteName: this.showField(this.props.source, \"site_name\"),\r\n                accessDate: this.showField(this.props.source, \"access_date\", true),\r\n                url: this.showField(this.props.source, \"url\")\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const source = this.props.source;\r\n        if (source === null) return null;\r\n        const dateFormat = \"MM-DD-YYYY\";\r\n        return (\r\n            <Modal size=\"sm\" show onHide={this.props.close}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Edit Citation Fields\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form layout=\"horizontal\"\r\n                          onChange={this.setFormValue}\r\n                          formValue={this.state.formValue}>\r\n                        <FormGroup>\r\n                            <ControlLabel>Author</ControlLabel>\r\n                            <FormControl name=\"author\"/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>Title</ControlLabel>\r\n                            <FormControl name=\"title\"/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>Publish Date</ControlLabel>\r\n                            <FormControl\r\n                                name=\"publishDate\"\r\n                                accepter={DatePicker}\r\n                                format={dateFormat}\r\n                                oneTap\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>Site Name</ControlLabel>\r\n                            <FormControl name=\"siteName\"/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>Access Date</ControlLabel>\r\n                            <FormControl\r\n                                name=\"accessDate\"\r\n                                accepter={DatePicker}\r\n                                format={dateFormat}\r\n                                oneTap\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <ControlLabel>URL</ControlLabel>\r\n                            <FormControl name=\"url\"/>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={this.saveInfo} loading={this.state.loading}>Save</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BibWindow;","import React from \"react\";\r\nimport {Table, Modal, Form, Input, Button} from 'rsuite';\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\n\r\nconst {Column, HeaderCell, Cell} = Table;\r\n\r\n\r\n// const data = [{ name: 'foobar', email: 'foobar@xxx.com', role: \"Owner\" }, { name: 'boofar', email: 'boofar@xxx.com', role: \"Collaborator\" }];\r\n\r\nclass SharedProject extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInputId: \"user-input-id\",\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    saveUser = async () => {\r\n        this.setLoading(true);\r\n        const email = document.getElementById(this.state.userInputId).value.trim();\r\n\r\n        const body = {\r\n            \"shared_proj\": this.props.curProject.id,\r\n            \"email\": email,\r\n            \"role\": \"Collaborator\"\r\n        }\r\n        const endpoint = \"/shared_projects\";\r\n        await makeHttpRequest(endpoint, 'POST', body);\r\n        this.props.updateProjects();\r\n    }\r\n\r\n    setLoading = (val) => {\r\n        this.setState({loading: val})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.curProject !== this.props.curProject && this.props.showSharedProject) {\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.curProject === null) {\r\n            return null;\r\n        }\r\n        return (\r\n            <Modal show={this.props.showSharedProject} onHide={() => this.props.setShowSharedProject(false)}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Shared settings for {this.props.curProject.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Form onSubmit={this.saveUser}>\r\n                    <Modal.Body>\r\n                        <Table data={this.props.curProject.shared_users}>\r\n                            <Column width={200} fixed>\r\n                                <HeaderCell>Name</HeaderCell>\r\n                                <Cell dataKey=\"name\"/>\r\n                            </Column>\r\n                            <Column width={200}>\r\n                                <HeaderCell>Email</HeaderCell>\r\n                                <Cell dataKey=\"email\"/>\r\n                            </Column>\r\n                            <Column width={200}>\r\n                                <HeaderCell>Role</HeaderCell>\r\n                                <Cell dataKey=\"role\"/>\r\n                            </Column>\r\n                        </Table>\r\n                        <Input style={{marginRight: 10}} placeholder=\"Type email you want to share project with\"\r\n                               id={this.state.userInputId} autoFocus required componentClass=\"textarea\" rows={30}/>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button type=\"submit\" loading={this.state.loading} appearance=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedProject;","/**\r\n * Returns n random elements from an array.\r\n * @param array\r\n * @param n\r\n * @returns {List}\r\n */\r\nexport const randomPicker = (array, n) => {\r\n    // Shuffle array\r\n    const sources = array;\r\n    for (let i = sources.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [sources[i], sources[j]] = [sources[j], sources[i]]\r\n    }\r\n\r\n    // Get subarray of first n sources\r\n    return sources.slice(0, n);\r\n};","import React from 'react';\r\nimport {\r\n    Button, Progress\r\n} from \"rsuite\";\r\n\r\nimport {randomPicker} from \"../../services/RandomGenerator\"\r\n\r\nconst {Line} = Progress;\r\n\r\nclass OddOnesOut extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            randomItems: this.getRandomItems(),\r\n            numPlayed: 0,\r\n            selectedItems: [],\r\n            // placement: 'right',\r\n            show: true\r\n        }\r\n    }\r\n\r\n    // Randomly select 4 items\r\n    getRandomItems = () => {\r\n        return randomPicker(this.props.items, 4);\r\n    }\r\n\r\n    updateRandomItems = () => {\r\n        this.setState({\r\n            randomItems: this.getRandomItems(),\r\n            // placement: 'right' // need to reset\r\n            show: !this.state.show\r\n            // show: false\r\n        })\r\n        console.log('show is false')\r\n        console.log(this.state.show)\r\n    }\r\n\r\n    chooseItem = (item) => {\r\n        // console.log(item)\r\n        this.setState({\r\n            numPlayed: this.state.numPlayed + 1,\r\n            selectedItems: [...this.state.selectedItems, item],\r\n            // placement: 'left',\r\n            show: !this.state.show\r\n            // show: true\r\n        }, this.updateRandomItems)\r\n        // console.log(this.state.selectedItems)\r\n        // console.log(this.state.numPlayed)\r\n        console.log('animation should show')\r\n        console.log(this.state.show)\r\n    }\r\n\r\n    generateDisplayValue = (item) => item.title ? item.title : item.content;\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        if (this.state.numPlayed < this.props.numRounds)\r\n            return (\r\n                <>\r\n                    <h1>OddOnesOut</h1>\r\n                    <h3>Round {this.state.numPlayed + 1}</h3>\r\n                    <Line percent={this.state.numPlayed / 5 * 100} status='active'/>\r\n                    <h5>Select the odd one out!</h5>\r\n\r\n                    {/* Need to figure out how to make animation persist? Disappear and then reappear? */}\r\n\r\n                    {/* <AnimatedButton item='test' index='test2'\r\n                        show={this.state.show} \r\n                        placement={this.state.placement} \r\n                        chooseItem= {this.chooseItem}\r\n                        ></AnimatedButton> */}\r\n                    {/* {this.state.RandomItems.map((item, index) =>\r\n                        <AnimatedButton item={item} index={index}/>)} */}\r\n\r\n                    {this.state.randomItems.map((item, index) =>\r\n                        <Button block key={index} appearance=\"primary\" color='blue'\r\n                                style={{margin: 20, display: 'block'}}\r\n                                onClick={() => this.chooseItem(item)}>{this.generateDisplayValue(item)}</Button>)}\r\n\r\n                    {/* <ul>\r\n                    {this.state.RandomItems.map((item, index) => <li key={index}>{item.title},{item.url}</li>)}\r\n                </ul> */}\r\n                </>\r\n            )\r\n        else {\r\n            return (\r\n                <>\r\n                    <h1>OddOnesOut</h1>\r\n                    <h3>Well Done!</h3>\r\n                    <h5>Hope you found some inspirations to explore more!</h5>\r\n                    <h5>Here are your selected items:</h5>\r\n\r\n                    {this.state.selectedItems.map((item, index) =>\r\n                        <Button block key={index} appearance=\"primary\" color='blue'\r\n                                style={{margin: 20, display: 'block'}}>{this.generateDisplayValue(item)}</Button>)}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default OddOnesOut;\r\n","import React from 'react';\r\nimport {\r\n    Button, Progress, Input, Form\r\n} from \"rsuite\";\r\n\r\nimport {randomPicker} from \"../../services/RandomGenerator\"\r\n\r\nconst {Line} = Progress;\r\n\r\nclass FindCommonality extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            randomItems: this.getRandomItems(),\r\n            numPlayed: 0,\r\n            commonality: [],\r\n            commonId: 'common-Id'\r\n        }\r\n    }\r\n\r\n    // Randomly select 2 items\r\n    getRandomItems = () => {\r\n        return randomPicker(this.props.items, 2);\r\n    }\r\n\r\n    updateRandomItems = () => {\r\n        this.setState({\r\n            randomItems: this.getRandomItems(),\r\n        })\r\n    }\r\n\r\n    submitCommon = () => {\r\n        let textarea = document.getElementById(this.state.commonId);\r\n        // console.log(textarea.value);\r\n        this.setState({\r\n            numPlayed: this.state.numPlayed + 1,\r\n            commonality: [...this.state.commonality, textarea.value],\r\n        }, this.updateRandomItems)\r\n        // Clear text area\r\n        textarea.value = \"\";\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        if (this.state.numPlayed < this.props.numRounds)\r\n            return (\r\n                <>\r\n                    <h1>What comes to mind?</h1>\r\n                    <h3>Round {this.state.numPlayed + 1}</h3>\r\n                    <Line percent={this.state.numPlayed / 5 * 100} status='active'/>\r\n                    <h5>What is the commonality between the following?</h5>\r\n                    {this.state.randomItems.map((item, index) =>\r\n                        <Button block key={index} appearance=\"primary\" color='blue'\r\n                                style={{margin: 20, display: 'block'}}>{item.title}</Button>)}\r\n                    <Form onSubmit={this.submitCommon}>\r\n                        <Input autoFocus type=\"text\" required componentClass=\"textarea\" id={this.state.commonId}\r\n                               rows={5} placeholder=\"Write your thoughts here...\"/>\r\n                        <Button appearance=\"primary\" color='blue'\r\n                                style={{margin: 20, display: 'block'}}\r\n                                type='submit'>Next</Button>\r\n                    </Form>\r\n                </>\r\n            )\r\n        else {\r\n            return (\r\n                <>\r\n                    <h1>What comes to mind?</h1>\r\n                    <h3>Well Done!</h3>\r\n                    <h5>Hope you found some inspirations to explore more!</h5>\r\n                    <h5>Here are the common themes you have identified:</h5>\r\n                    <ul>\r\n                        {this.state.commonality.map((common, index) => <li key={index}>{common}</li>)}\r\n                    </ul>\r\n\r\n                    {/* {this.state.selectedItems.map((item, index) =>\r\n                        <Button block key={index} appearance=\"primary\" color='blue' style={{ margin: 20, display: 'block'}}>{item.title}</Button>)} */}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default FindCommonality;\r\n","import React from 'react';\r\nimport {\r\n    Button, Progress, Form, Divider\r\n} from \"rsuite\";\r\nimport {Network, DataSet} from \"vis-network/standalone\";\r\n\r\n\r\nimport {randomPicker} from \"../../services/RandomGenerator\"\r\n\r\nconst {Line} = Progress;\r\n\r\nclass MakePairs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            randomItems: this.getRandomItems(),\r\n            numPlayed: 0,\r\n            // numRounds: 5,\r\n            connections: [],\r\n            network: null,\r\n            visNodes: null,\r\n            visEdges: null,\r\n            selectedNode: null,\r\n            items: null,\r\n            loading: false,\r\n        }\r\n        console.log(\"numRounds\", this.props.numRounds)\r\n    }\r\n\r\n    // Helper function to setup the nodes and edges for the graph\r\n    createNodesAndEdges() {\r\n        let nodes = new DataSet();\r\n        let edges = new DataSet();\r\n        // Iterate through each node in the graph and build the arrays of nodes and edges\r\n        for (let index in this.state.randomItems) {\r\n            let node = this.state.randomItems[index];\r\n            // Positions should be fixed \r\n            // [0] [1]\r\n            // [2] [3]\r\n            let x_position = (index % 2) ? 0 : 500;\r\n            let y_position = (index < 2) ? 0 : 200;\r\n\r\n            nodes.add({id: node.id, label: node.title, x: x_position, y: y_position});\r\n            // // Deal with positions\r\n            // if (node.x_position === null || node.y_position === null) {\r\n            //     // If position is still undefined, generate random x and y in interval [-300, 300]\r\n            //     const [x, y] = this.generateNodePositions(node);\r\n            //     this.updateItemPosition(node.id, x, y);\r\n            //     nodes.add({ id: node.id, label: node.title, x: x, y: y });\r\n            // } else {\r\n            //     nodes.add({ id: node.id, label: node.title, x: node.x_position, y: node.y_position });\r\n            // }\r\n            // // Deal with edges\r\n            // for (let nextIndex in node.next_items) {\r\n            //     const nextId = node.next_items[nextIndex];\r\n            //     edges.add({ from: node.id, to: nextId })\r\n            // }\r\n        }\r\n        this.setState({visNodes: nodes, visEdges: edges});\r\n        return [nodes, edges];\r\n    }\r\n\r\n\r\n    renderNetwork = (callback) => {\r\n        if (this.props.curProject === null) return;\r\n\r\n        // this.getItems(() => {\r\n        // TODO?\r\n        const [nodes, edges] = this.createNodesAndEdges();\r\n\r\n        // create a network\r\n        const container = document.getElementById('MakePairs');\r\n\r\n        // provide the data in the vis format\r\n        const data = {\r\n            nodes: nodes,\r\n            edges: edges\r\n        };\r\n        const options = {\r\n            nodes: {\r\n                shape: \"box\",\r\n                size: 16,\r\n                margin: 10,\r\n                physics: false,\r\n                chosen: false,\r\n                font: {\r\n                    face: \"Apple-System\",\r\n                    color: \"white\"\r\n                },\r\n                color: {\r\n                    background: getComputedStyle(document.querySelector(\".rs-btn-primary\"))[\"background-color\"]\r\n                },\r\n                widthConstraint: {\r\n                    maximum: 500\r\n                }\r\n            },\r\n            edges: {\r\n                // arrows: {\r\n                //     to: {\r\n                //         enabled: true\r\n                //     }\r\n                // },\r\n                color: \"black\",\r\n                physics: false,\r\n                smooth: false,\r\n                hoverWidth: 0\r\n            },\r\n            interaction: {\r\n                selectConnectedEdges: false,\r\n                hover: true,\r\n                hoverConnectedEdges: false\r\n            },\r\n            manipulation: {\r\n                enabled: false,\r\n                // TODO\r\n                addEdge: this.addEdgeConnection\r\n            }\r\n        };\r\n\r\n        console.log(\"container\", container, \"data\", data)\r\n        // Initialize the network -- TODO: WHEN REFACTORING, CHANGE DATA and OPTIONS\r\n        const network = new Network(container, data, options);\r\n        network.fit()\r\n\r\n        // Handle click vs drag\r\n        network.on(\"click\", (params) => {\r\n            if (params.nodes !== undefined && params.nodes.length > 0) {\r\n                const nodeId = params.nodes[0];\r\n                // console.log(\"PARAM NODES:\", params.nodes);\r\n                // this.handleClickedNode(nodeId);\r\n                // console.log(\"nodeId\", nodeId);\r\n                if (this.state.from_id === null || this.state.from_id === nodeId) {\r\n                    this.setState({from_id: nodeId});\r\n                } else {\r\n                    this.addEdgeConnection(this.state.from_id, nodeId); // Node Id will be to!\r\n                    this.setState({from_id: null});\r\n                }\r\n                // Network.addEdgeMode();\r\n            }\r\n        });\r\n\r\n        // // Update positions after dragging node\r\n        // network.on(\"dragEnd\", () => {\r\n        //     // Only update positions if there is a selected node\r\n        //     if (network.getSelectedNodes().length !== 0) {\r\n        //         const id = network.getSelectedNodes()[0];\r\n        //         const position = network.getPosition(id);\r\n        //         const x = position.x;\r\n        //         const y = position.y;\r\n        //         this.updateItemPosition(id, x, y);\r\n        //     }\r\n        // });\r\n\r\n        // Set cursor to pointer when hovering over a node\r\n        network.on(\"hoverNode\", () => network.canvas.body.container.style.cursor = \"pointer\");\r\n        network.on(\"blurNode\", () => network.canvas.body.container.style.cursor = \"default\");\r\n\r\n        // Store the network\r\n        this.setState({network: network}, callback);\r\n\r\n    }\r\n\r\n    addEdgeConnection = (from_id, to_id) => {\r\n        this.state.network.body.data.edges.add([{from: from_id, to: to_id}])\r\n        // Add connections to state\r\n        const fromLabel = this.state.network.body.data.nodes.get(from_id).label;\r\n        const toLabel = this.state.network.body.data.nodes.get(to_id).label;\r\n        // console.log(\"from\", fromLabel)\r\n        // console.log(\"to\", toLabel)\r\n        this.setState({\r\n            connections: [...this.state.connections, {from: fromLabel, to: toLabel}]\r\n        })\r\n    }\r\n\r\n    // Randomly select 4 items\r\n    getRandomItems = () => {\r\n        return randomPicker(this.props.items, 4);\r\n    }\r\n\r\n    updateRandomItems = () => {\r\n        this.setState({\r\n            randomItems: this.getRandomItems(),\r\n        })\r\n    }\r\n\r\n    submitItems = () => {\r\n        console.log(\"network\", this.state.network);\r\n        this.setState({\r\n            numPlayed: this.state.numPlayed + 1,\r\n        }, this.updateRandomItems)\r\n        if (this.state.numPlayed < this.props.numRounds)\r\n            this.renderNetwork();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const container = document.getElementById('MakePairs');\r\n        // console.log(container)\r\n        this.renderNetwork();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        if (this.state.numPlayed < this.props.numRounds)\r\n            return (\r\n                <>\r\n                    <h1>Make Pairs</h1>\r\n                    <h3>Round {this.state.numPlayed + 1}</h3>\r\n                    <Line percent={this.state.numPlayed / 5 * 100} status='active'/>\r\n                    <div id='MakePairs' style={{height: 480}}/>\r\n                    {/* <div id='MakePairs'>  */}\r\n                    <Form onSubmit={this.submitItems}>\r\n                        <Button appearance=\"primary\" color='blue'\r\n                                style={{margin: 20, display: 'block'}}\r\n                                type='submit'>Next</Button>\r\n                    </Form>\r\n\r\n                </>\r\n            )\r\n        else {\r\n            return (\r\n                <>\r\n                    <h1>Make Pairs</h1>\r\n                    <h3>Well Done!</h3>\r\n                    <h5>Hope you found some inspirations to explore more!</h5>\r\n                    <h5>Here are the connections you have identified:</h5>\r\n                    {this.state.connections.slice(1, this.state.connections.length).map((connection, index) => [\r\n                        <Button key={index} appearance=\"primary\" color='blue'\r\n                                style={{margin: 20}}>{connection.from}</Button>,\r\n                        // <Button key={index} appearance=\"primary\" color='blue' style={{ margin: 20, display: 'block' }}>{connection.from}</Button>,\r\n                        // <p key={index + 50}>is related to</p>,\r\n                        <Divider key={index + 50}>is related to</Divider>,\r\n                        <Button key={index + 100} appearance=\"primary\" color='blue'\r\n                                style={{margin: 20}}>{connection.to}</Button>,\r\n                        <Divider key={index + 200}/>])}\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MakePairs;\r\n","import React from \"react\";\r\nimport {\r\n    Modal\r\n} from \"rsuite\";\r\n\r\nclass GameWindow extends React.Component {\r\n    render() {\r\n        // TODO: Not checking if undefined? Does not work on empty projects?\r\n        if (this.props.sources === null) return null;\r\n        \r\n        // console.log(this.state.selectedGame)\r\n        return (\r\n            <div id='GameWindow'>\r\n            <Modal full show={this.props.showGame} onHide={() => this.props.setShowGame(false)}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        MiniGames\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {this.props.selectedGame}\r\n                </Modal.Body>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameWindow;","import React from 'react';\r\nimport {\r\n    Tooltip, Whisper, Icon, IconButton\r\n} from \"rsuite\";\r\n\r\n// Import all minigames\r\nimport OddOnesOut from \"./minigames/OddOnesOut\";\r\nimport FindCommonality from \"./minigames/FindCommonality\";\r\nimport MakePairs from \"./minigames/MakePairs\";\r\n\r\n// Import Game window\r\nimport GameWindow from \"./MiniGameWindow\"\r\n\r\nclass MiniGames extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Cannot define the games as a state here due to lack of update\r\n        this.state = {\r\n            loading: false,\r\n            selectedGame: null,\r\n            numRounds: 5\r\n        }\r\n    }\r\n\r\n    randomizer = () => {\r\n        this.setState({\r\n            selectedGame: this.state.games[Math.floor(Math.random() *\r\n                this.state.games.length)],\r\n            numRounds: Math.ceil(Math.random() * 6)\r\n        })\r\n    }\r\n\r\n    updateGames = () => {\r\n        console.log(\"num items\", this.props.items.length);\r\n        const validGames = [];\r\n        // Have different length boundaries for different games\r\n        validGames.push(<OddOnesOut items={this.props.items} numRounds={this.state.numRounds}/>);\r\n        validGames.push(<FindCommonality items={this.props.items} numRounds={this.state.numRounds}/>);\r\n        if (this.props.items.length > 4) {\r\n            validGames.push(<MakePairs items={this.props.items} numRounds={this.state.numRounds}/>);\r\n        }\r\n        // Games need to be loaded here to have the most recent items, randomizer needs to be called after the games is updated\r\n        this.setState({games: validGames}, this.randomizer)\r\n    }\r\n\r\n    setShowGame = (clicked) => {\r\n        // Keeps track if Game Generation Button clicked and Window should open\r\n        if (this.props.network) { // Check that the network exists\r\n            this.setState({\r\n                showGame: clicked\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setShowGame(true);\r\n        this.updateGames();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <GameWindow showGame={this.state.showGame}\r\n                            setShowGame={this.setShowGame} items={this.props.items}\r\n                            selectedGame={this.state.selectedGame}/>\r\n                <Whisper preventOverflow trigger=\"hover\" speaker={<Tooltip>Minigames</Tooltip>}\r\n                         placement=\"topEnd\">\r\n                    <IconButton appearance=\"primary\" icon={<Icon icon=\"gamepad\"/>} circle\r\n                                size=\"lg\" onClick={this.handleClick}\r\n                                style={{\r\n                                    top: '50%',\r\n                                    position: \"absolute\",\r\n                                    right: 5,\r\n                                    zIndex: 1\r\n                                }}/>\r\n                </Whisper>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MiniGames;","import React from \"react\";\r\n\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\n\r\nclass RaiseLevelButton extends React.Component {\r\n    buttonAction = () => {\r\n        const cur = this.props.curClusterView;\r\n        if (cur.parent_cluster === null) this.props.setCurClusterView(null);\r\n        else {\r\n            const endpoint = \"/clusters/\" + this.props.curClusterView.parent_cluster;\r\n            makeHttpRequest(endpoint).then(response => {\r\n                this.props.setCurClusterView(response.body.cluster);\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const divStyle = {\r\n            display: 'block',\r\n            width: '100px',\r\n            height: '100px',\r\n            borderStyle: 'solid',\r\n            borderWidth: '0 0 150px 150px', /* adjust for size of triangle */\r\n            borderColor: 'transparent transparent transparent #3498FF',\r\n            position: 'fixed',\r\n            top: 55,\r\n            left: 0,\r\n            zIndex: 99999,\r\n            color: 'white',\r\n            cursor: 'pointer'\r\n        }\r\n        const textStyle = {\r\n            position: 'absolute',\r\n            top: '30px',\r\n            width: '80px',\r\n            left: '-140px',\r\n            fontFamily: 'Apple-System',\r\n            transform: 'rotate(-45deg)',\r\n            color: 'white',\r\n            textAlign: 'center',\r\n            display: 'block',\r\n            userSelect: 'none'\r\n        }\r\n\r\n        if (this.props.curClusterView === null) return null;\r\n\r\n        return (\r\n            <div style={divStyle} onClick={this.buttonAction}>\r\n                <span style={textStyle}>\r\n                    To previous level\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RaiseLevelButton","export default function isOverlap(rectA, rectB) {\r\n    return (rectA.left < rectB.right && rectA.right > rectB.left &&\r\n        rectA.bottom > rectB.top && rectA.top < rectB.bottom)\r\n}","import React from \"react\";\r\nimport {\r\n    Alert, Loader\r\n} from \"rsuite\";\r\nimport {Network, DataSet} from \"vis-network/standalone\";\r\n\r\nimport ItemView from \"./ItemView\";\r\nimport NewItemForm from \"../components/NewItemForm\";\r\nimport NewClusterForm from \"./NewClusterForm\"\r\nimport AppFooter from \"./AppFooter\";\r\nimport BibWindow from \"./BibWindow\";\r\nimport SharedProject from \"./SharedProject\";\r\nimport Minigames from \"./Minigames\";\r\n\r\nimport RaiseLevelButton from \"../components/RaiseLevelButton\"\r\n\r\nimport makeHttpRequest, {constructHttpQuery} from \"../services/HttpRequest\";\r\n\r\nimport throttle from \"../services/throttle\";\r\nimport isOverlap from \"../services/isOverlap\"\r\n\r\nclass MindMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const modes = {\r\n            NULL: null,\r\n            URL: \"url\",\r\n            NOTES: \"notes\"\r\n        };\r\n        const types = {\r\n            NULL: null,\r\n            PURESOURCE: \"pureSource\",\r\n            SOURCEANDNOTE: \"sourceAndNote\",\r\n            SOURCEANDHIGHLIGHT: \"sourceAndHighlight\",\r\n            PURENOTE: \"pureNote\",\r\n            NEITHER: \"neither\"\r\n        }\r\n        const nodeColors = {\r\n            NULL: null,\r\n            [types.PURESOURCE]: \"#00c0de\",\r\n            [types.SOURCEANDNOTE]: \"#f36170\",\r\n            [types.SOURCEANDHIGHLIGHT]: \"#45c786\",\r\n            [types.PURENOTE]: \"#f5a94b\",\r\n            [types.NEITHER]: \"#000000\"\r\n        };\r\n        this.state = {\r\n            network: null,\r\n            visNodes: null,\r\n            selectedItem: null,\r\n            items: null,\r\n            nonSelectedNodes: null,\r\n            clusters: null,\r\n            loading: false,\r\n            showNewItemForm: false,\r\n            showNewItemHelperMessage: false,\r\n            newItemData: modes.NULL,\r\n            modes: modes,\r\n            newItemFormType: null,\r\n            item: null,\r\n            types: types,\r\n            nodeColors: nodeColors,\r\n            showColor: nodeColors.NULL,\r\n            showNewClusterForm: false,\r\n            showNewClusterHelperMessage: false,\r\n            showAddToClusterHelperMessage: false,\r\n            stationaryClusterItemData: null,\r\n            newClusterIds: null,\r\n            existingClusterId: null,\r\n            curClusterView: JSON.parse(localStorage.getItem(\"curClusterView\")) // Set to the cluster object if inside a cluster\r\n        };\r\n    };\r\n\r\n    generateVisClusterId = (cluster) => \"c\" + cluster.id;\r\n\r\n    generateClusterIdFromVisId = (visClusterId) => parseInt(visClusterId.substring(visClusterId.indexOf(\"c\") + 1));\r\n\r\n    generateVisInClusterId = (cluster, type, node) => {\r\n        let firstPart = \"c\" + cluster.id;\r\n        let secondPart;\r\n        if (type === \"item\") secondPart = \"i\" + node.id;\r\n        else if (type === \"title\") secondPart = \"t\";\r\n        else if (type === \"count\") secondPart = \"n\";\r\n        return firstPart + secondPart;\r\n    }\r\n\r\n    generateClusterIdAndNodeIdFromVisInClusterId = (visInClusterId) => {\r\n        let nodeId;\r\n        let index = visInClusterId.indexOf(\"i\");\r\n        if (index >= 0) {\r\n            nodeId = parseInt(visInClusterId.substring(index + 1));\r\n        } else {\r\n            index = visInClusterId.indexOf(\"t\");\r\n            if (index === -1) index = visInClusterId.indexOf(\"n\");\r\n        }\r\n\r\n        const clusterId = parseInt(visInClusterId.substring(visInClusterId.indexOf(\"c\") + 1, index));\r\n        return [clusterId, nodeId];\r\n    }\r\n\r\n    isItem = (id) => {\r\n        const node = this.state.visNodes.get(id);\r\n        if (node) return node.group === \"items\";\r\n        return false;\r\n    }\r\n\r\n    isCluster = (id) => {\r\n        const node = this.state.visNodes.get(id);\r\n        if (node) return node.group === \"clusters\";\r\n        return false;\r\n    }\r\n\r\n    isItemInCluster = (id) => {\r\n        const node = this.state.visNodes.get(id);\r\n        if (node) return node.group === \"inCluster\";\r\n        return false;\r\n    }\r\n\r\n    setSelectedItem = (item) => {\r\n        this.setState({selectedItem: item})\r\n    }\r\n\r\n    getSelectedItemDetails = async () => {\r\n        const endpoint = \"/items/\" + this.state.selectedItem.id;\r\n        const response = await makeHttpRequest(endpoint);\r\n        this.setSelectedItem(response.body.item);\r\n    }\r\n\r\n    setNonSelectedNodes = (id, nodes) => {\r\n        this.setState({nonSelectedNodes: nodes.getIds().filter(element => element !== id)})\r\n    }\r\n\r\n    // Check if the network is in edit mode\r\n    // isEditMode = () => {\r\n    //     const visCloseButton = document.getElementsByClassName(\"vis-close\")[0];\r\n    //     return getComputedStyle(visCloseButton).display === \"none\"\r\n    // }\r\n\r\n    // Set selected node for the detailed view\r\n    handleClickedNode = (id) => {\r\n        this.setSelectedItem(this.state.items.find(x => x.id === id));\r\n    }\r\n\r\n    handleClickedCluster = (id) => {\r\n        this.setCurClusterView(this.state.clusters.find(x => x.id === id))\r\n    }\r\n\r\n    setCurClusterView = (cluster) => {\r\n        this.setState({curClusterView: cluster})\r\n    }\r\n\r\n    handleDragStart = (nodeId, nodes, network) => {\r\n        const isCluster = this.isCluster(nodeId);\r\n        const isItemInCluster = this.isItemInCluster(nodeId);\r\n        if (isCluster || isItemInCluster) {\r\n            const numDisplayedChildNodes = 2;\r\n            let cluster, visClusterId;\r\n            if (isCluster) {\r\n                cluster = this.state.clusters.find(cluster => cluster.id === this.generateClusterIdFromVisId(nodeId));\r\n                visClusterId = nodeId;\r\n            } else {\r\n                cluster = this.state.clusters.find(cluster => cluster.id === this.generateClusterIdAndNodeIdFromVisInClusterId(nodeId)[0]);\r\n                visClusterId = this.generateVisClusterId(cluster);\r\n            }\r\n            const childNodes = cluster.child_items.slice(0, numDisplayedChildNodes);\r\n            const childNodesIds = childNodes.map(node => this.generateVisInClusterId(cluster, \"item\", node));\r\n            const clusterTitleId = this.generateVisInClusterId(cluster, \"title\");\r\n            const nodesToMove = childNodesIds.concat([visClusterId, clusterTitleId]);\r\n            // Include node count if necessary\r\n            if (cluster.child_items.length > 2) {\r\n                const clusterCountId = this.generateVisInClusterId(cluster, \"count\");\r\n                nodesToMove.push(clusterCountId);\r\n            }\r\n            network.selectNodes(nodesToMove);\r\n        } else {\r\n            this.setNonSelectedNodes(nodeId, nodes);\r\n        }\r\n    }\r\n\r\n    setLoading = (val) => {\r\n        this.setState({loading: val});\r\n    }\r\n\r\n    getItems = async (callback) => {\r\n        if (this.props.curProject === null) return null;\r\n        this.setLoading(true);\r\n\r\n        if (this.props.filters.length === 0) {\r\n            this.setLoading(false);\r\n            this.setState({items: []}, callback);\r\n            return;\r\n        }\r\n\r\n        if (this.state.curClusterView === null) {\r\n            let endpoint = \"/projects/\" + this.props.curProject.id + \"/items\";\r\n\r\n            if (this.props.searchQuery !== '' && this.props.filters.length !== 0) {\r\n                endpoint = constructHttpQuery(endpoint, this.props.searchQuery, this.props.filters)\r\n            }\r\n\r\n            const response = await makeHttpRequest(endpoint);\r\n\r\n            this.setLoading(false);\r\n            this.setState({items: response.body.items}, callback);\r\n        } else {\r\n            const endpoint = \"/clusters/\" + this.state.curClusterView.id;\r\n            const response = await makeHttpRequest(endpoint);\r\n            this.setLoading(false);\r\n            this.setState({items: response.body.cluster.child_items}, callback);\r\n        }\r\n    }\r\n\r\n    getClusters = async (callback) => {\r\n        if (this.props.curProject === null) return null;\r\n        this.setLoading(true)\r\n        if (this.state.curClusterView == null) {\r\n            const endpoint = \"/projects/\" + this.props.curProject.id + \"/clusters\";\r\n            const response = await makeHttpRequest(endpoint);\r\n            this.setLoading(false);\r\n            this.setState({clusters: response.body.clusters}, callback);\r\n        } else {\r\n            const endpoint = \"/clusters/\" + this.state.curClusterView.id;\r\n            const response = await makeHttpRequest(endpoint);\r\n            const children = response.body.cluster.child_clusters.map(child => makeHttpRequest('/clusters/' + child));\r\n            Promise.all(children).then(values => {\r\n                this.setLoading(false);\r\n                this.setState({clusters: values.map(child => child.body.cluster)}, callback);\r\n            })\r\n        }\r\n    }\r\n\r\n    updateItemPosition = (itemId, x, y) => {\r\n        const endpoint = \"/items/\" + itemId;\r\n        const body = {\r\n            \"x_position\": x,\r\n            \"y_position\": y\r\n        }\r\n        makeHttpRequest(endpoint, \"PATCH\", body).then();\r\n    }\r\n\r\n    updateClusterPosition = (clusterId, x, y) => {\r\n        const endpoint = \"/clusters/\" + clusterId;\r\n        const body = {\r\n            \"x\": x,\r\n            \"y\": y\r\n        }\r\n        makeHttpRequest(endpoint, \"PATCH\", body).then();\r\n    }\r\n\r\n    fitNetworkToScreen = () => {\r\n        if (this.state.network !== null) {\r\n            this.state.network.fit()\r\n        }\r\n    }\r\n\r\n    disableEditMode = () => {\r\n        this.setShowNewItemHelperMessage(false);\r\n        this.setShowNewClusterHelperMessage(false);\r\n        if (this.state.network) this.state.network.disableEditMode()\r\n    }\r\n\r\n    switchShowNewItemForm = () => {\r\n        this.setState({showNewItemForm: !this.state.showNewItemForm}, () => {\r\n            // Get out of edit mode if necessary\r\n            if (!this.state.showNewItemForm) {\r\n                this.disableEditMode()\r\n            }\r\n        });\r\n    }\r\n\r\n    switchShowNewClusterForm = () => {\r\n        this.setState({showNewClusterForm: !this.state.showNewClusterForm}, () => {\r\n            // Get out of edit mode if necessary\r\n            if (!this.state.showNewClusterForm) {\r\n                this.disableEditMode()\r\n            }\r\n        });\r\n    }\r\n\r\n    setShowNewItemHelperMessage = (val) => {\r\n        this.setState({showNewItemHelperMessage: val});\r\n    }\r\n\r\n    addItem = (nodeData, callback) => {\r\n        this.switchShowNewItemForm();\r\n        this.setShowNewItemHelperMessage(false);\r\n        this.setState({\r\n            newItemData: nodeData\r\n        });\r\n    }\r\n\r\n    setShowNewClusterHelperMessage = (val) => {\r\n        this.setState({showNewClusterHelperMessage: val});\r\n    }\r\n\r\n    setShowAddToClusterHelperMessage = (val) => {\r\n        this.setState({showAddToClusterHelperMessage: val});\r\n    }\r\n\r\n    setAddItemMode = (newItemFormType, item = null) => {\r\n        this.setState({\r\n            newItemFormType: newItemFormType,\r\n            item: item\r\n        });\r\n        this.setShowNewItemHelperMessage(true);\r\n        if (this.state.network) this.state.network.addNodeMode();\r\n    }\r\n\r\n    addItemToCluster = (clusterId, itemId) => {\r\n        this.setLoading(true);\r\n        const endpoint = \"/clusters/\" + clusterId + \"/items/\" + itemId;\r\n        makeHttpRequest(endpoint, \"POST\").then(response => {\r\n            this.setLoading(false);\r\n            if (response.body.success) Alert.success(\"This item was successfully added\");\r\n            else Alert.error(\"This item could not be added\");\r\n            this.renderNetwork();\r\n        });\r\n\r\n    }\r\n\r\n    /* Helper function to generate position for nodes\r\n    This function adds an offset to  the randomly generated position based on the\r\n    position of the node's parent (if it has one)\r\n     */\r\n    generateNodePositions(node) {\r\n        let xOffset = 0;\r\n        let yOffset = 0;\r\n        // // Update the offset if the node has a parent\r\n        // if (node.prev_sources.length !== 0) {\r\n        //     const prevId = node.prev_sources[0];\r\n        //     const prevNode = this.state.items.find(x => x.id === prevId);\r\n        //     // Check if the previous node has defined coordinates\r\n        //     if (prevNode.x_position !== null && prevNode.y_position !== null) {\r\n        //         xOffset = prevNode.x_position;\r\n        //         yOffset = prevNode.y_position;\r\n        //     }\r\n        // }\r\n        // Helper variable to generate random positions\r\n        const rangeLimit = 300; // To generate positions in the interval [-rangeLimit, rangeLimit]\r\n        // Generate random positions\r\n        const xRandom = Math.floor(Math.random() * 2 * rangeLimit - rangeLimit);\r\n        const yRandom = Math.floor(Math.random() * 2 * rangeLimit - rangeLimit);\r\n\r\n        // Return positions with offset\r\n        return [xRandom + xOffset, yRandom + yOffset];\r\n    }\r\n\r\n    getNodeType = (node) => {\r\n        if (!node) return this.state.types.NULL;\r\n        //pure note\r\n        if (!node.url) return this.state.types.PURENOTE;\r\n        //source and note\r\n        if (node.url && node.is_note && node.content) return this.state.types.SOURCEANDNOTE;\r\n        //source and highlight\r\n        if (node.url && !node.is_note && node.content) return this.state.types.SOURCEANDHIGHLIGHT;\r\n        //pure source\r\n        if (node.url && !node.content) return this.state.types.PURESOURCE;\r\n    }\r\n\r\n    getNodeLabel = (node, nodeType) => {\r\n        const types = this.state.types;\r\n        const contentLength = 100;\r\n        let nodeContent;\r\n        if (node.content) {\r\n            nodeContent = node.content;\r\n            if (nodeContent.length > contentLength) nodeContent = nodeContent.substring(0, contentLength) + \"...\";\r\n        }\r\n        if (nodeType === types.PURESOURCE)\r\n            return node.title;\r\n        if (nodeType === types.SOURCEANDNOTE || nodeType === types.SOURCEANDHIGHLIGHT)\r\n            return node.title + \"\\n\" + nodeContent;\r\n        if (nodeType === types.PURENOTE)\r\n            return nodeContent;\r\n    }\r\n\r\n    getNodePosition = (node) => {\r\n        let x = node.x_position;\r\n        let y = node.y_position;\r\n        if (x === null || y === null) {\r\n            // If position is still undefined, generate random x and y in interval [-300, 300]\r\n            [x, y] = this.generateNodePositions(node);\r\n            this.updateItemPosition(node.id, x, y);\r\n        }\r\n        return [x, y];\r\n    }\r\n\r\n    // Helper function to setup the nodes for the graph\r\n    createNodes() {\r\n        let nodes = new DataSet();\r\n\r\n        // Iterate through each node in the graph and build the arrays of nodes\r\n        for (let index in this.state.items) {\r\n            if (this.state.clusters.length === 0 || this.state.clusters.filter(cluster => cluster.project_id === this.props.curProject.id)\r\n                .filter(cluster => cluster.child_items.some(e => e.id === this.state.items[index].id)).length === 0) {\r\n                const node = this.state.items[index];\r\n                const nodeType = this.getNodeType(node);\r\n                const label = this.getNodeLabel(node, nodeType);\r\n                const [x, y] = this.getNodePosition(node);\r\n                nodes.add({group: \"items\", id: node.id, label: label, x: x, y: y, color: this.getColor(node)});\r\n            }\r\n        }\r\n        this.setState({visNodes: nodes});\r\n        return nodes;\r\n    }\r\n\r\n    getColor = (item) => {\r\n        const nodeType = this.getNodeType(item);\r\n        return this.state.nodeColors[nodeType];\r\n    }\r\n\r\n    createClusters() {\r\n        let clusterNodes = new DataSet();\r\n        if (this.state.clusters.length === 0) {\r\n            return clusterNodes;\r\n        }\r\n        // let projectClusters = this.state.clusters.filter(\r\n        //         cluster => (cluster.project_id === this.props.curProject.id))\r\n        let projectClusters = this.state.clusters;\r\n        console.log('ok', this.state.items);\r\n        projectClusters.forEach(cluster => {\r\n            console.log(cluster);\r\n            clusterNodes.add({\r\n                group: \"clusters\",\r\n                id: this.generateVisClusterId(cluster),\r\n                label: '-----------------------------------------------------', // :(\r\n                x: cluster.x_position,\r\n                y: cluster.y_position\r\n            });\r\n            // Add node to serve as cluster title\r\n            const helperDataOffset = 120;\r\n            clusterNodes.add({\r\n                group: \"inCluster\",\r\n                id: this.generateVisInClusterId(cluster, \"title\"),\r\n                label: cluster.name,\r\n                x: cluster.x_position,\r\n                y: cluster.y_position - helperDataOffset,\r\n                font: {\r\n                    color: \"black\",\r\n                    size: 18\r\n                },\r\n                color: {\r\n                    background: \"#ffffff\",\r\n                    border: \"#00c0de\"\r\n                }\r\n            })\r\n            if (cluster.child_items.length > 2) {\r\n                // Render number of extra nodes\r\n                const extraNodes = cluster.child_items.length - 2;\r\n                clusterNodes.add({\r\n                    group: \"inCluster\",\r\n                    id: this.generateVisInClusterId(cluster, \"count\"),\r\n                    label: \"+\" + extraNodes + \" item\" + (extraNodes > 1 ? \"s\" : \"\"),\r\n                    x: cluster.x_position,\r\n                    y: cluster.y_position + helperDataOffset,\r\n                    font: {\r\n                        color: \"black\",\r\n                        size: 18\r\n                    },\r\n                    color: {\r\n                        background: \"rgba(0, 0, 0, 0)\",\r\n                        border: \"rgba(0, 0, 0, 0)\"\r\n                    }\r\n                })\r\n            }\r\n            let count = 0;\r\n            console.log(cluster.child_items);\r\n            cluster.child_items.forEach(child => {\r\n                const nodeType = this.getNodeType(child);\r\n                const label = this.getNodeLabel(child, nodeType);\r\n                let yOffset = -40;\r\n                if (count === 1) {\r\n                    yOffset = 40;\r\n                }\r\n                if (count > 1) return;\r\n\r\n                clusterNodes.add({\r\n                    group: 'inCluster',\r\n                    id: this.generateVisInClusterId(cluster, \"item\", child),\r\n                    label: label,\r\n                    x: cluster.x_position,\r\n                    y: cluster.y_position + yOffset,\r\n                    widthConstraint: {\r\n                        maximum: 170\r\n                    },\r\n                    color: this.getColor(child)\r\n                })\r\n                count++;\r\n            })\r\n        })\r\n        return clusterNodes\r\n    }\r\n\r\n    renderNetwork = (callback) => {\r\n        if (this.props.curProject === null) return;\r\n\r\n        this.getItems(() => {\r\n            this.getClusters(() => {\r\n                let nodes = this.createNodes();\r\n                const clusterNodes = this.createClusters();\r\n                clusterNodes.forEach(cluster => {\r\n                    nodes.add(cluster)\r\n                })\r\n                console.log(\"nodes\", nodes.get());\r\n                // create a network\r\n                const container = document.getElementById('mindmap');\r\n\r\n                // provide the data in the vis format\r\n                const data = {\r\n                    nodes: nodes\r\n                };\r\n\r\n                const options = {\r\n                    groups: {\r\n                        clusters: {\r\n                            chosen: {\r\n                                label: (values, id, selected, hovering) => {\r\n                                    values.color = '#ffffff00';\r\n                                },\r\n                                node: (values, id, selected, hovering) => {\r\n                                    values.color = '#ffffff00';\r\n                                }\r\n                            },\r\n                            shape: 'circle',\r\n                            font: {\r\n                                face: \"Apple-System\",\r\n                                color: \"#ffffff00\"\r\n                            },\r\n                            color: {\r\n                                border: \"#00c0de\",\r\n                                background: '#ffffff00'\r\n                            },\r\n                            physics: false\r\n                        },\r\n                        items: {\r\n                            shape: \"box\",\r\n                            size: 16,\r\n                            margin: 10,\r\n                            physics: false,\r\n                            chosen: false,\r\n                            font: {\r\n                                face: \"Apple-System\",\r\n                                color: \"white\"\r\n                            },\r\n                            widthConstraint: {\r\n                                maximum: 500\r\n                            }\r\n                        },\r\n                        inCluster: {\r\n                            shape: \"box\",\r\n                            size: 16,\r\n                            margin: 10,\r\n                            physics: false,\r\n                            chosen: false,\r\n                            font: {\r\n                                face: \"Apple-System\",\r\n                                color: \"white\"\r\n                            },\r\n                            widthConstraint: {\r\n                                maximum: 500\r\n                            }\r\n                        }\r\n                    },\r\n                    interaction: {\r\n                        selectConnectedEdges: false,\r\n                        hover: true,\r\n                        hoverConnectedEdges: false\r\n                    },\r\n                    manipulation: {\r\n                        enabled: false,\r\n                        addNode: this.addItem\r\n                    }\r\n                };\r\n\r\n                // Initialize the network\r\n                const network = new Network(container, data, options);\r\n                network.fit()\r\n\r\n                // Handle click vs drag\r\n                network.on(\"click\", (params) => {\r\n                    if (params.nodes !== undefined && params.nodes.length > 0) {\r\n                        const nodeId = params.nodes[0];\r\n                        if (this.isItem(nodeId)) {\r\n                            this.handleClickedNode(nodeId);\r\n                        } else if (this.isCluster(nodeId) || this.isItemInCluster(nodeId)) {\r\n                            let clusterId;\r\n                            if (this.isItemInCluster(nodeId)) {\r\n                                clusterId = this.generateClusterIdAndNodeIdFromVisInClusterId(nodeId)[0];\r\n                            } else {\r\n                                clusterId = this.generateClusterIdFromVisId(nodeId);\r\n                            }\r\n                            this.handleClickedCluster(clusterId)\r\n                        }\r\n                    }\r\n                });\r\n\r\n                network.on(\"dragStart\", (params) => {\r\n                    if (params.nodes !== undefined && params.nodes.length > 0) {\r\n                        const nodeId = params.nodes[0];\r\n                        this.handleDragStart(nodeId, nodes, network);\r\n                    }\r\n                });\r\n\r\n                let dt = 100 //ms\r\n                network.on(\"dragging\", throttle((params) => {\r\n                    if (params.nodes !== undefined && params.nodes.length > 0) {\r\n                        const id = network.getSelectedNodes()[0];\r\n                        if (this.isItem(id)) {\r\n                            const boundingBox = network.getBoundingBox(id);\r\n                            let otherNodes = this.state.nonSelectedNodes;\r\n                            if ((!this.state.showNewClusterHelperMessage && !this.state.showAddToClusterHelperMessage)\r\n                                && otherNodes.length >= 1) {\r\n                                otherNodes.forEach(node => {\r\n                                    if (isOverlap(network.getBoundingBox(node), boundingBox)) {\r\n                                        if (this.isItem(node)) {\r\n                                            this.setState({stationaryClusterItemData: network.getPosition(node)})\r\n                                            this.setState({newClusterIds: {\"item1\": id, \"item2\": node}})\r\n                                            this.setShowNewClusterHelperMessage(true)\r\n                                        } else if (this.isCluster(node)) {\r\n                                            this.setState({existingClusterId: node})\r\n                                            this.setShowAddToClusterHelperMessage(true)\r\n                                        }\r\n                                    }\r\n                                })\r\n                            } else {\r\n                                if (this.state.newClusterIds && !isOverlap(boundingBox, network.getBoundingBox(this.state.newClusterIds.item2))) {\r\n                                    this.setShowNewClusterHelperMessage(false)\r\n                                }\r\n                                if (this.state.existingClusterId && !isOverlap(boundingBox, network.getBoundingBox(this.state.existingClusterId))) {\r\n                                    this.setShowAddToClusterHelperMessage(false)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }, dt));\r\n\r\n                // Update positions after dragging node\r\n                network.on(\"dragEnd\", (eventData) => {\r\n                    // Only update positions if there is a selected node\r\n                    if (network.getSelectedNodes().length !== 0) {\r\n                        if (this.state.showNewClusterHelperMessage) {\r\n                            this.setState({showNewClusterForm: true})\r\n                        } else if (this.state.showAddToClusterHelperMessage) {\r\n                            // Add item to existing cluster\r\n                            const existingCluster = this.state.existingClusterId;\r\n                            const id = this.generateClusterIdFromVisId(existingCluster);\r\n                            this.addItemToCluster(id, network.getSelectedNodes()[0]);\r\n                            this.setShowAddToClusterHelperMessage(false);\r\n                            this.renderNetwork();\r\n                        } else {\r\n                            // Update position of item or cluster\r\n                            const id = network.getSelectedNodes()[0];\r\n                            const position = network.getPosition(id);\r\n                            const x = position.x;\r\n                            const y = position.y;\r\n                            if (this.isItem(id)) {\r\n                                this.updateItemPosition(id, x, y);\r\n                            } else if (this.isCluster(id) || this.isItemInCluster(id)) {\r\n                                let clusterId;\r\n                                if (this.isCluster(id)) clusterId = this.generateClusterIdFromVisId(id);\r\n                                else [clusterId,] = this.generateClusterIdAndNodeIdFromVisInClusterId(id);\r\n                                this.updateClusterPosition(clusterId, x, y);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // Set cursor to pointer when hovering over a node\r\n                network.on(\"hoverNode\", () => network.canvas.body.container.style.cursor = \"pointer\");\r\n                network.on(\"blurNode\", () => network.canvas.body.container.style.cursor = \"default\");\r\n\r\n                // Store the network\r\n                this.setState({network: network}, callback);\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.curProject !== this.props.curProject) {\r\n            // Set items to null before updating to show loading icon\r\n            this.setState({items: null}, this.renderNetwork);\r\n        }\r\n\r\n        if (prevState.showNewItemHelperMessage !== this.state.showNewItemHelperMessage) {\r\n            if (this.state.showNewItemHelperMessage) {\r\n                Alert.info(\"Click on an empty space to add your new item.\",\r\n                    0, this.disableEditMode);\r\n            } else {\r\n                Alert.close();\r\n            }\r\n        }\r\n\r\n        if (prevProps.searchQuery !== this.props.searchQuery || prevProps.filters !== this.props.filters) {\r\n            this.renderNetwork(null);\r\n        }\r\n\r\n        if (prevState.showNewClusterHelperMessage !== this.state.showNewClusterHelperMessage) {\r\n            if (this.state.showNewClusterHelperMessage) {\r\n                Alert.info(\"Release to create new cluster.\",\r\n                    0, this.disableEditMode);\r\n            } else {\r\n                Alert.close();\r\n            }\r\n        }\r\n\r\n        if (prevState.showAddToClusterHelperMessage !== this.state.showAddToClusterHelperMessage) {\r\n            if (this.state.showAddToClusterHelperMessage) {\r\n                Alert.info(\"Release to add to cluster.\",\r\n                    0, this.disableEditMode);\r\n            } else {\r\n                Alert.close();\r\n            }\r\n        }\r\n\r\n        if (prevState.showNewClusterForm !== this.state.showNewClusterForm) {\r\n            if (this.state.showNewClusterForm) {\r\n                Alert.close()\r\n            }\r\n        }\r\n\r\n        if (prevState.curClusterView !== this.state.curClusterView) {\r\n            localStorage.setItem(\"curClusterView\", JSON.stringify(this.state.curClusterView));\r\n            // Set items and clusters to null to trigger loading spinner\r\n            this.setState({items: null, clusters: null}, this.renderNetwork);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.curClusterView === null) {\r\n            localStorage.setItem(\"curClusterView\", JSON.stringify(null))\r\n        }\r\n        this.renderNetwork();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.curProject === null || (this.state.loading && (this.state.items === null || this.state.clusters === null))) {\r\n            return <Loader size=\"lg\" backdrop center/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"mindmap\"/>\r\n                <Minigames\r\n                    curProject={this.props.curProject}\r\n                    items={this.state.items}\r\n                    network={this.state.network}/>\r\n                <ItemView selectedItem={this.state.selectedItem}\r\n                          setSelectedItem={this.setSelectedItem}\r\n                          getSelectedItemDetails={this.getSelectedItemDetails}\r\n                          renderNetwork={this.renderNetwork}\r\n                          setAddItemMode={this.setAddItemMode}\r\n                          getNodeType={this.getNodeType}\r\n                          nodeTypes={this.state.types}/>\r\n                <NewItemForm showNewItemForm={this.state.showNewItemForm}\r\n                             curProject={this.props.curProject}\r\n                             renderNetwork={this.renderNetwork}\r\n                             switchShowNewItemForm={this.switchShowNewItemForm}\r\n                             inputType={this.state.newItemFormType}\r\n                             newItemData={this.state.newItemData}\r\n                             item={this.state.item}\r\n                             parentCluster={this.state.curClusterView}/>\r\n                <NewClusterForm showNewClusterForm={this.state.showNewClusterForm}\r\n                                stationaryClusterItemData={this.state.stationaryClusterItemData}\r\n                                curProject={this.props.curProject}\r\n                                renderNetwork={this.renderNetwork}\r\n                                newClusterIds={this.state.newClusterIds}\r\n                                switchShowNewClusterForm={this.switchShowNewClusterForm}\r\n                                disableEditMode={this.disableEditMode}/>\r\n                <BibWindow showBib={this.props.showBib} setShowBib={this.props.setShowBib}\r\n                           curProject={this.props.curProject}/>\r\n                <SharedProject showSharedProject={this.props.showSharedProject}\r\n                               setShowSharedProject={this.props.setShowSharedProject}\r\n                               curProject={this.props.curProject} updateProjects={this.props.updateProjects}/>\r\n                <RaiseLevelButton curClusterView={this.state.curClusterView}\r\n                                  setCurClusterView={this.setCurClusterView}/>\r\n                <AppFooter fit={this.fitNetworkToScreen} setAddItemMode={this.setAddItemMode}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MindMap;","export default function throttle(func, ms) {\r\n    let lastFunc\r\n    let lastRan\r\n    return function () {\r\n        const context = this\r\n        const args = arguments\r\n        if (!lastRan) {\r\n            func.apply(context, args)\r\n            lastRan = Date.now()\r\n        } else {\r\n            clearTimeout(lastFunc)\r\n            lastFunc = setTimeout(function () {\r\n                if ((Date.now() - lastRan) >= ms) {\r\n                    func.apply(context, args)\r\n                    lastRan = Date.now()\r\n                }\r\n            }, ms - (Date.now() - lastRan))\r\n        }\r\n    }\r\n}","// Import from npm libraries\r\nimport React from 'react';\r\nimport {Button, Loader} from 'rsuite';\r\nimport {withAuthenticationRequired} from \"@auth0/auth0-react\";\r\n\r\n// Import React Components\r\nimport AppHeader from \"./AppHeader\";\r\nimport ProjectsSidebar from \"./ProjectsSidebar\";\r\nimport MindMap from \"./MindMap\";\r\n\r\n// Import utilities\r\nimport makeHttpRequest from \"../services/HttpRequest\";\r\n\r\n// Import styles\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport '../index.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            curProject: JSON.parse(localStorage.getItem(\"curProject\")),\r\n            projects: null,\r\n            showProjectsSidebar: false,\r\n            showBib: false,\r\n            showSharedProject: false,\r\n            searchQuery: '',\r\n            filters: [\"Title\",\r\n                \"URL\",\r\n                \"Page Content\",\r\n                \"Highlights\",\r\n                \"Notes\"]\r\n        }\r\n    }\r\n\r\n    updateProjects = (callback) => {\r\n        makeHttpRequest(\"/projects\").then(response => {\r\n            if (!response.body.success) return;\r\n\r\n            const projects = response.body.projects;\r\n            this.setState({projects: projects}, () => {\r\n                // Update current project\r\n                if (this.state.curProject !== null) {\r\n                    this.setCurProject(this.state.curProject.id);\r\n                } else if (projects && projects.length > 0) {\r\n                    this.setState({curProject: projects[0]});\r\n                }\r\n\r\n                if (typeof callback === \"function\") {\r\n                    callback();\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    switchShowProjectsSidebar = () => {\r\n        this.setState({showProjectsSidebar: !this.state.showProjectsSidebar});\r\n    }\r\n\r\n    setCurProject = (projectId) => {\r\n        if (projectId === null) this.setState({curProject: null})\r\n        else {\r\n            const project = this.state.projects.find(x => x.id === projectId);\r\n            this.setState({curProject: project});\r\n        }\r\n    }\r\n\r\n    projectsButton = () => {\r\n        return (\r\n            <Button appearance=\"primary\" id=\"projects-sidebar-btn\" onClick={this.switchShowProjectsSidebar}>\r\n                Your<br/>Projects\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    setShowBib = (clicked) => {\r\n        // Keeps track if Bibliography Generation Button clicked and Window should open\r\n        this.setState({\r\n            showBib: clicked\r\n        });\r\n    }\r\n\r\n    setSearchQuery = (searchQuery) => {\r\n        this.setState({searchQuery});\r\n        if (this.props.onInput) {\r\n            this.props.onInput({searchQuery})\r\n        }\r\n    }\r\n\r\n    updateFilters = (filters) => {\r\n        this.setState({filters});\r\n    }\r\n\r\n\r\n    setShowSharedProject = (val) => {\r\n        this.setState({showSharedProject: val})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProjects()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // Update localstorage whenever the curProject changes\r\n        if (prevState.curProject !== this.state.curProject) {\r\n            if (this.state.curProject === null) {\r\n                this.setState({curProject: this.state.projects[0]})\r\n            }\r\n            localStorage.setItem(\"curProject\", JSON.stringify(this.state.curProject));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppHeader curProject={this.state.curProject} setShowBib={this.setShowBib}\r\n                           searchQuery={this.state.searchQuery}\r\n                           setSearchQuery={this.setSearchQuery} updateFilters={this.updateFilters}/>\r\n                <ProjectsSidebar show={this.state.showProjectsSidebar} curProject={this.state.curProject}\r\n                                 projects={this.state.projects} setShowSharedProject={this.setShowSharedProject}\r\n                                 close={this.switchShowProjectsSidebar} updateProjects={this.updateProjects}\r\n                                 setCurProject={this.setCurProject}/>\r\n                {this.projectsButton()}\r\n                <MindMap curProject={this.state.curProject} showBib={this.state.showBib}\r\n                         setShowBib={this.setShowBib} searchQuery={this.state.searchQuery}\r\n                         filters={this.state.filters} setShowSharedProject={this.setShowSharedProject}\r\n                         showSharedProject={this.state.showSharedProject}\r\n                         updateProjects={this.updateProjects}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAuthenticationRequired(App, {\r\n    onRedirecting: () => <Loader size=\"lg\" backdrop center/>,\r\n});","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nconst KnolistAuthProvider = ({ children }) => {\r\n  const domain = 'knolist.us.auth0.com';\r\n  const clientId = 'pBu5uP4mKTQgBttTW13N0wCVgsx90KMi';\r\n  const audience = 'knolist';\r\n\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n      audience={audience}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default KnolistAuthProvider;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route, Switch } from \"react-router\";\r\nimport Page from \"./my-knolist/Page.js\";\r\nimport Settings from \"./my-knolist/Settings.js\";\r\n\r\nimport App from './app/App.js';\r\nimport KnolistAuthProvider from \"./authentication/auth-provider\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Switch>\r\n            <KnolistAuthProvider>\r\n                <Route exact path=\"/\">\r\n                    <App />\r\n                </Route>\r\n                <Route path=\"/my-projects\">\r\n                    <Page url={\"/my-projects\"} />\r\n                </Route>\r\n                <Route path=\"/shared\">\r\n                    <Page url={\"/shared\"} />\r\n                </Route>\r\n                <Route path=\"/archived\">\r\n                    <Page url={\"/archived\"} />\r\n                </Route>\r\n                <Route path=\"/settings\">\r\n                    <Settings />\r\n                </Route>\r\n            </KnolistAuthProvider>\r\n        </Switch>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}